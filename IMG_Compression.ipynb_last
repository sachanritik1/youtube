{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sachanritik1/youtube/blob/master/IMG_Compression.ipynb_last\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "CWYN4cPW6odA"
      },
      "outputs": [],
      "source": [
        "# import all the necessary packages\n",
        "\n",
        "import os\n",
        "import sys\n",
        "import random\n",
        "import warnings\n",
        "from pylab import imshow, show, get_cmap\n",
        "\n",
        "#packages for tensor and array calculations\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        " #tqdm is used for displaying a progress bar \n",
        "from tqdm import tqdm\n",
        "\n",
        "from itertools import chain\n",
        "\n",
        "#keras package along with tensroflow backend for deep learning\n",
        "from keras.models import Model, load_model, Sequential\n",
        "from keras.layers import Input, Dense, UpSampling2D, Flatten, Reshape\n",
        "from keras.layers.core import Dropout, Lambda\n",
        "from keras.layers.convolutional import Conv2D, Conv2DTranspose\n",
        "from keras.layers.pooling import MaxPooling2D\n",
        "# from keras.layers.merge import concatenate\n",
        "from keras.layers import concatenate\n",
        "from keras.callbacks import EarlyStopping, ModelCheckpoint, ReduceLROnPlateau, Callback\n",
        "from keras import backend as K\n",
        "import tensorflow as tf\n",
        "\n",
        "#images display and basic operations\n",
        "import skimage\n",
        "from PIL import Image\n",
        "from skimage.io import imread, imshow, imread_collection, concatenate_images\n",
        "from skimage.transform import resize\n",
        "from skimage.util import crop, pad\n",
        "from skimage.morphology import label\n",
        "warnings.filterwarnings('ignore', category=UserWarning, module='skimage')\n",
        "seed = 42\n",
        "random.seed = seed\n",
        "np.random.seed = seed"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vrdfzmGq689g",
        "outputId": "11e7f5e9-6a89-45b6-ac32-0341e74643e8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "ArzXmKWR6odG"
      },
      "outputs": [],
      "source": [
        "#dimensions of the image to be processed and compressed\n",
        "\n",
        "IMG_WIDTH = 96\n",
        "IMG_HEIGHT = 64\n",
        "IMG_CHANNELS = 1\n",
        "INPUT_SHAPE=(IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS)\n",
        "TRAIN_PATH = 'drive/MyDrive/data/'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p3ZATsqq6odH",
        "outputId": "37ef56cd-fb91-4600-e1cf-de54eaf66a9c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['7983.png',\n",
              " '4306.png',\n",
              " '6246.png',\n",
              " '9576.png',\n",
              " '2346.png',\n",
              " '2673.png',\n",
              " '7774.png',\n",
              " '4943.png',\n",
              " '5107.png',\n",
              " '5289.png']"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "#diplaying names of images\n",
        "train_ids = next(os.walk(TRAIN_PATH))[2]\n",
        "train_ids[:10]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 157
        },
        "id": "O0VUpiUg6odJ",
        "outputId": "814232a3-86bf-4cca-c466-49cf543abe88"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<PIL.PngImagePlugin.PngImageFile image mode=RGB size=160x140 at 0x7F19F7190F10>"
            ],
            "image/png": "\n"
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "#sample image\n",
        "Image.open(TRAIN_PATH + '5289.png')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JWpAGN5Q6odJ",
        "outputId": "468851e1-e830-446f-a333-9432af39fef2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4861\n"
          ]
        }
      ],
      "source": [
        "print(len(train_ids))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "id": "S-SAQO6C6odK"
      },
      "outputs": [],
      "source": [
        "\n",
        "X_train = np.zeros((len(train_ids), IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS), dtype='float32')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6BPR9I7q6odL",
        "outputId": "1b6e95b1-922f-43e9-c4e0-0dff329ef80a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(4861, 64, 96, 1)\n"
          ]
        }
      ],
      "source": [
        "print(X_train.shape)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IKsbKheg6odL",
        "outputId": "698e4ee3-0703-4d63-a73a-c066c80c926c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Getting train images ... \n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  0%|          | 0/4861 [00:00<?, ?it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1.png\n",
            " Problem with: drive/MyDrive/data/2.png\n",
            " Problem with: drive/MyDrive/data/3.png\n",
            " Problem with: drive/MyDrive/data/4.png\n",
            " Problem with: drive/MyDrive/data/5.png\n",
            " Problem with: drive/MyDrive/data/6.png\n",
            " Problem with: drive/MyDrive/data/7.png\n",
            " Problem with: drive/MyDrive/data/8.png\n",
            " Problem with: drive/MyDrive/data/9.png\n",
            " Problem with: drive/MyDrive/data/10.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  0%|          | 11/4861 [00:00<03:36, 22.45it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/13.png\n",
            " Problem with: drive/MyDrive/data/14.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  0%|          | 17/4861 [00:01<12:32,  6.43it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/18.png\n",
            " Problem with: drive/MyDrive/data/19.png\n",
            " Problem with: drive/MyDrive/data/20.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  0%|          | 23/4861 [00:03<18:42,  4.31it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/24.png\n",
            " Problem with: drive/MyDrive/data/25.png\n",
            " Problem with: drive/MyDrive/data/26.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  1%|          | 29/4861 [00:04<16:15,  4.95it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/30.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  1%|          | 32/4861 [00:05<15:16,  5.27it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/33.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  1%|          | 34/4861 [00:05<16:04,  5.00it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/35.png\n",
            " Problem with: drive/MyDrive/data/37.png\n",
            " Problem with: drive/MyDrive/data/38.png\n",
            " Problem with: drive/MyDrive/data/39.png\n",
            " Problem with: drive/MyDrive/data/40.png\n",
            " Problem with: drive/MyDrive/data/41.png\n",
            " Problem with: drive/MyDrive/data/42.png\n",
            " Problem with: drive/MyDrive/data/43.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  1%|          | 48/4861 [00:07<13:01,  6.16it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/49.png\n",
            " Problem with: drive/MyDrive/data/50.png\n",
            " Problem with: drive/MyDrive/data/51.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  1%|          | 52/4861 [00:07<11:54,  6.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/53.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  1%|          | 54/4861 [00:08<13:31,  5.93it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/55.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  1%|          | 57/4861 [00:09<18:24,  4.35it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/58.png\n",
            " Problem with: drive/MyDrive/data/59.png\n",
            " Problem with: drive/MyDrive/data/60.png\n",
            " Problem with: drive/MyDrive/data/61.png\n",
            " Problem with: drive/MyDrive/data/62.png\n",
            " Problem with: drive/MyDrive/data/63.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  1%|▏         | 65/4861 [00:09<10:12,  7.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/67.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  1%|▏         | 70/4861 [00:10<13:09,  6.07it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/71.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  2%|▏         | 73/4861 [00:11<18:16,  4.37it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/75.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  2%|▏         | 77/4861 [00:12<16:17,  4.90it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/78.png\n",
            " Problem with: drive/MyDrive/data/79.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  2%|▏         | 82/4861 [00:13<17:11,  4.63it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/83.png\n",
            " Problem with: drive/MyDrive/data/84.png\n",
            " Problem with: drive/MyDrive/data/85.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  2%|▏         | 87/4861 [00:13<13:03,  6.10it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/88.png\n",
            " Problem with: drive/MyDrive/data/89.png\n",
            " Problem with: drive/MyDrive/data/90.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  2%|▏         | 93/4861 [00:15<17:53,  4.44it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/94.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  2%|▏         | 96/4861 [00:15<17:12,  4.62it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/97.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  2%|▏         | 102/4861 [00:35<4:36:41,  3.49s/it]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/102.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  3%|▎         | 133/4861 [00:40<21:49,  3.61it/s]  "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/105.png\n",
            " Problem with: drive/MyDrive/data/106.png\n",
            " Problem with: drive/MyDrive/data/107.png\n",
            " Problem with: drive/MyDrive/data/108.png\n",
            " Problem with: drive/MyDrive/data/111.png\n",
            " Problem with: drive/MyDrive/data/112.png\n",
            " Problem with: drive/MyDrive/data/115.png\n",
            " Problem with: drive/MyDrive/data/116.png\n",
            " Problem with: drive/MyDrive/data/117.png\n",
            " Problem with: drive/MyDrive/data/123.png\n",
            " Problem with: drive/MyDrive/data/125.png\n",
            " Problem with: drive/MyDrive/data/127.png\n",
            " Problem with: drive/MyDrive/data/131.png\n",
            " Problem with: drive/MyDrive/data/132.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  3%|▎         | 154/4861 [00:41<10:49,  7.25it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/135.png\n",
            " Problem with: drive/MyDrive/data/136.png\n",
            " Problem with: drive/MyDrive/data/138.png\n",
            " Problem with: drive/MyDrive/data/143.png\n",
            " Problem with: drive/MyDrive/data/144.png\n",
            " Problem with: drive/MyDrive/data/145.png\n",
            " Problem with: drive/MyDrive/data/146.png\n",
            " Problem with: drive/MyDrive/data/149.png\n",
            " Problem with: drive/MyDrive/data/151.png\n",
            " Problem with: drive/MyDrive/data/153.png\n",
            " Problem with: drive/MyDrive/data/154.png\n",
            " Problem with: drive/MyDrive/data/156.png\n",
            " Problem with: drive/MyDrive/data/159.png\n",
            " Problem with: drive/MyDrive/data/160.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  4%|▍         | 185/4861 [00:42<05:51, 13.32it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/162.png\n",
            " Problem with: drive/MyDrive/data/164.png\n",
            " Problem with: drive/MyDrive/data/169.png\n",
            " Problem with: drive/MyDrive/data/170.png\n",
            " Problem with: drive/MyDrive/data/173.png\n",
            " Problem with: drive/MyDrive/data/175.png\n",
            " Problem with: drive/MyDrive/data/177.png\n",
            " Problem with: drive/MyDrive/data/182.png\n",
            " Problem with: drive/MyDrive/data/183.png\n",
            " Problem with: drive/MyDrive/data/186.png\n",
            " Problem with: drive/MyDrive/data/189.png\n",
            " Problem with: drive/MyDrive/data/191.png\n",
            " Problem with: drive/MyDrive/data/192.png\n",
            " Problem with: drive/MyDrive/data/193.png\n",
            " Problem with: drive/MyDrive/data/194.png\n",
            " Problem with: drive/MyDrive/data/195.png\n",
            " Problem with: drive/MyDrive/data/197.png\n",
            " Problem with: drive/MyDrive/data/198.png\n",
            " Problem with: drive/MyDrive/data/203.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  5%|▍         | 238/4861 [00:42<02:09, 35.65it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/207.png\n",
            " Problem with: drive/MyDrive/data/208.png\n",
            " Problem with: drive/MyDrive/data/209.png\n",
            " Problem with: drive/MyDrive/data/212.png\n",
            " Problem with: drive/MyDrive/data/213.png\n",
            " Problem with: drive/MyDrive/data/216.png\n",
            " Problem with: drive/MyDrive/data/217.png\n",
            " Problem with: drive/MyDrive/data/219.png\n",
            " Problem with: drive/MyDrive/data/220.png\n",
            " Problem with: drive/MyDrive/data/222.png\n",
            " Problem with: drive/MyDrive/data/223.png\n",
            " Problem with: drive/MyDrive/data/224.png\n",
            " Problem with: drive/MyDrive/data/225.png\n",
            " Problem with: drive/MyDrive/data/226.png\n",
            " Problem with: drive/MyDrive/data/227.png\n",
            " Problem with: drive/MyDrive/data/229.png\n",
            " Problem with: drive/MyDrive/data/231.png\n",
            " Problem with: drive/MyDrive/data/234.png\n",
            " Problem with: drive/MyDrive/data/236.png\n",
            " Problem with: drive/MyDrive/data/239.png\n",
            " Problem with: drive/MyDrive/data/243.png\n",
            " Problem with: drive/MyDrive/data/245.png\n",
            " Problem with: drive/MyDrive/data/247.png\n",
            " Problem with: drive/MyDrive/data/251.png\n",
            " Problem with: drive/MyDrive/data/252.png\n",
            " Problem with: drive/MyDrive/data/253.png\n",
            " Problem with: drive/MyDrive/data/254.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  5%|▌         | 260/4861 [00:42<01:35, 48.36it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/258.png\n",
            " Problem with: drive/MyDrive/data/260.png\n",
            " Problem with: drive/MyDrive/data/263.png\n",
            " Problem with: drive/MyDrive/data/264.png\n",
            " Problem with: drive/MyDrive/data/267.png\n",
            " Problem with: drive/MyDrive/data/271.png\n",
            " Problem with: drive/MyDrive/data/274.png\n",
            " Problem with: drive/MyDrive/data/276.png\n",
            " Problem with: drive/MyDrive/data/278.png\n",
            " Problem with: drive/MyDrive/data/279.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  6%|▌         | 300/4861 [00:43<01:20, 56.42it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/281.png\n",
            " Problem with: drive/MyDrive/data/282.png\n",
            " Problem with: drive/MyDrive/data/285.png\n",
            " Problem with: drive/MyDrive/data/287.png\n",
            " Problem with: drive/MyDrive/data/291.png\n",
            " Problem with: drive/MyDrive/data/294.png\n",
            " Problem with: drive/MyDrive/data/297.png\n",
            " Problem with: drive/MyDrive/data/301.png\n",
            " Problem with: drive/MyDrive/data/305.png\n",
            " Problem with: drive/MyDrive/data/307.png\n",
            " Problem with: drive/MyDrive/data/308.png\n",
            " Problem with: drive/MyDrive/data/310.png\n",
            " Problem with: drive/MyDrive/data/316.png\n",
            " Problem with: drive/MyDrive/data/318.png\n",
            " Problem with: drive/MyDrive/data/319.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  8%|▊         | 369/4861 [00:43<00:39, 115.10it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/323.png\n",
            " Problem with: drive/MyDrive/data/324.png\n",
            " Problem with: drive/MyDrive/data/326.png\n",
            " Problem with: drive/MyDrive/data/327.png\n",
            " Problem with: drive/MyDrive/data/330.png\n",
            " Problem with: drive/MyDrive/data/331.png\n",
            " Problem with: drive/MyDrive/data/334.png\n",
            " Problem with: drive/MyDrive/data/336.png\n",
            " Problem with: drive/MyDrive/data/337.png\n",
            " Problem with: drive/MyDrive/data/338.png\n",
            " Problem with: drive/MyDrive/data/339.png\n",
            " Problem with: drive/MyDrive/data/340.png\n",
            " Problem with: drive/MyDrive/data/342.png\n",
            " Problem with: drive/MyDrive/data/343.png\n",
            " Problem with: drive/MyDrive/data/348.png\n",
            " Problem with: drive/MyDrive/data/350.png\n",
            " Problem with: drive/MyDrive/data/351.png\n",
            " Problem with: drive/MyDrive/data/353.png\n",
            " Problem with: drive/MyDrive/data/354.png\n",
            " Problem with: drive/MyDrive/data/355.png\n",
            " Problem with: drive/MyDrive/data/358.png\n",
            " Problem with: drive/MyDrive/data/360.png\n",
            " Problem with: drive/MyDrive/data/363.png\n",
            " Problem with: drive/MyDrive/data/364.png\n",
            " Problem with: drive/MyDrive/data/366.png\n",
            " Problem with: drive/MyDrive/data/370.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  8%|▊         | 390/4861 [00:43<00:35, 126.02it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/373.png\n",
            " Problem with: drive/MyDrive/data/377.png\n",
            " Problem with: drive/MyDrive/data/379.png\n",
            " Problem with: drive/MyDrive/data/382.png\n",
            " Problem with: drive/MyDrive/data/387.png\n",
            " Problem with: drive/MyDrive/data/388.png\n",
            " Problem with: drive/MyDrive/data/390.png\n",
            " Problem with: drive/MyDrive/data/395.png\n",
            " Problem with: drive/MyDrive/data/396.png\n",
            " Problem with: drive/MyDrive/data/399.png\n",
            " Problem with: drive/MyDrive/data/401.png\n",
            " Problem with: drive/MyDrive/data/402.png\n",
            " Problem with: drive/MyDrive/data/403.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "  9%|▉         | 429/4861 [00:44<00:50, 87.41it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/405.png\n",
            " Problem with: drive/MyDrive/data/408.png\n",
            " Problem with: drive/MyDrive/data/409.png\n",
            " Problem with: drive/MyDrive/data/410.png\n",
            " Problem with: drive/MyDrive/data/414.png\n",
            " Problem with: drive/MyDrive/data/415.png\n",
            " Problem with: drive/MyDrive/data/416.png\n",
            " Problem with: drive/MyDrive/data/418.png\n",
            " Problem with: drive/MyDrive/data/421.png\n",
            " Problem with: drive/MyDrive/data/422.png\n",
            " Problem with: drive/MyDrive/data/427.png\n",
            " Problem with: drive/MyDrive/data/436.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r  9%|▉         | 445/4861 [00:44<01:18, 56.14it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/441.png\n",
            " Problem with: drive/MyDrive/data/446.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 10%|▉         | 481/4861 [00:45<01:11, 60.84it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/448.png\n",
            " Problem with: drive/MyDrive/data/449.png\n",
            " Problem with: drive/MyDrive/data/451.png\n",
            " Problem with: drive/MyDrive/data/454.png\n",
            " Problem with: drive/MyDrive/data/459.png\n",
            " Problem with: drive/MyDrive/data/460.png\n",
            " Problem with: drive/MyDrive/data/463.png\n",
            " Problem with: drive/MyDrive/data/465.png\n",
            " Problem with: drive/MyDrive/data/466.png\n",
            " Problem with: drive/MyDrive/data/468.png\n",
            " Problem with: drive/MyDrive/data/469.png\n",
            " Problem with: drive/MyDrive/data/471.png\n",
            " Problem with: drive/MyDrive/data/473.png\n",
            " Problem with: drive/MyDrive/data/474.png\n",
            " Problem with: drive/MyDrive/data/476.png\n",
            " Problem with: drive/MyDrive/data/477.png\n",
            " Problem with: drive/MyDrive/data/479.png\n",
            " Problem with: drive/MyDrive/data/481.png\n",
            " Problem with: drive/MyDrive/data/483.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 10%|█         | 495/4861 [00:46<01:34, 46.28it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/487.png\n",
            " Problem with: drive/MyDrive/data/488.png\n",
            " Problem with: drive/MyDrive/data/489.png\n",
            " Problem with: drive/MyDrive/data/490.png\n",
            " Problem with: drive/MyDrive/data/491.png\n",
            " Problem with: drive/MyDrive/data/493.png\n",
            " Problem with: drive/MyDrive/data/495.png\n",
            " Problem with: drive/MyDrive/data/499.png\n",
            " Problem with: drive/MyDrive/data/500.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 10%|█         | 506/4861 [00:46<02:00, 36.23it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/509.png\n",
            " Problem with: drive/MyDrive/data/510.png\n",
            " Problem with: drive/MyDrive/data/511.png\n",
            " Problem with: drive/MyDrive/data/514.png\n",
            " Problem with: drive/MyDrive/data/515.png\n",
            " Problem with: drive/MyDrive/data/516.png\n",
            " Problem with: drive/MyDrive/data/517.png\n",
            " Problem with: drive/MyDrive/data/518.png\n",
            " Problem with: drive/MyDrive/data/519.png\n",
            " Problem with: drive/MyDrive/data/523.png\n",
            " Problem with: drive/MyDrive/data/524.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 11%|█▏        | 550/4861 [00:47<01:20, 53.55it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/526.png\n",
            " Problem with: drive/MyDrive/data/528.png\n",
            " Problem with: drive/MyDrive/data/530.png\n",
            " Problem with: drive/MyDrive/data/531.png\n",
            " Problem with: drive/MyDrive/data/534.png\n",
            " Problem with: drive/MyDrive/data/537.png\n",
            " Problem with: drive/MyDrive/data/538.png\n",
            " Problem with: drive/MyDrive/data/540.png\n",
            " Problem with: drive/MyDrive/data/543.png\n",
            " Problem with: drive/MyDrive/data/545.png\n",
            " Problem with: drive/MyDrive/data/548.png\n",
            " Problem with: drive/MyDrive/data/549.png\n",
            " Problem with: drive/MyDrive/data/552.png\n",
            " Problem with: drive/MyDrive/data/553.png\n",
            " Problem with: drive/MyDrive/data/557.png\n",
            " Problem with: drive/MyDrive/data/558.png\n",
            " Problem with: drive/MyDrive/data/559.png\n",
            " Problem with: drive/MyDrive/data/561.png\n",
            " Problem with: drive/MyDrive/data/562.png\n",
            " Problem with: drive/MyDrive/data/564.png\n",
            " Problem with: drive/MyDrive/data/565.png\n",
            " Problem with: drive/MyDrive/data/566.png\n",
            " Problem with: drive/MyDrive/data/567.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 13%|█▎        | 624/4861 [00:47<00:35, 119.72it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/575.png\n",
            " Problem with: drive/MyDrive/data/576.png\n",
            " Problem with: drive/MyDrive/data/578.png\n",
            " Problem with: drive/MyDrive/data/579.png\n",
            " Problem with: drive/MyDrive/data/580.png\n",
            " Problem with: drive/MyDrive/data/581.png\n",
            " Problem with: drive/MyDrive/data/582.png\n",
            " Problem with: drive/MyDrive/data/586.png\n",
            " Problem with: drive/MyDrive/data/587.png\n",
            " Problem with: drive/MyDrive/data/588.png\n",
            " Problem with: drive/MyDrive/data/589.png\n",
            " Problem with: drive/MyDrive/data/592.png\n",
            " Problem with: drive/MyDrive/data/594.png\n",
            " Problem with: drive/MyDrive/data/595.png\n",
            " Problem with: drive/MyDrive/data/597.png\n",
            " Problem with: drive/MyDrive/data/600.png\n",
            " Problem with: drive/MyDrive/data/603.png\n",
            " Problem with: drive/MyDrive/data/604.png\n",
            " Problem with: drive/MyDrive/data/605.png\n",
            " Problem with: drive/MyDrive/data/606.png\n",
            " Problem with: drive/MyDrive/data/609.png\n",
            " Problem with: drive/MyDrive/data/610.png\n",
            " Problem with: drive/MyDrive/data/611.png\n",
            " Problem with: drive/MyDrive/data/612.png\n",
            " Problem with: drive/MyDrive/data/615.png\n",
            " Problem with: drive/MyDrive/data/620.png\n",
            " Problem with: drive/MyDrive/data/621.png\n",
            " Problem with: drive/MyDrive/data/623.png\n",
            " Problem with: drive/MyDrive/data/625.png\n",
            " Problem with: drive/MyDrive/data/626.png\n",
            " Problem with: drive/MyDrive/data/627.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 13%|█▎        | 645/4861 [00:47<00:30, 136.28it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/629.png\n",
            " Problem with: drive/MyDrive/data/630.png\n",
            " Problem with: drive/MyDrive/data/634.png\n",
            " Problem with: drive/MyDrive/data/635.png\n",
            " Problem with: drive/MyDrive/data/640.png\n",
            " Problem with: drive/MyDrive/data/641.png\n",
            " Problem with: drive/MyDrive/data/644.png\n",
            " Problem with: drive/MyDrive/data/645.png\n",
            " Problem with: drive/MyDrive/data/646.png\n",
            " Problem with: drive/MyDrive/data/648.png\n",
            " Problem with: drive/MyDrive/data/649.png\n",
            " Problem with: drive/MyDrive/data/650.png\n",
            " Problem with: drive/MyDrive/data/651.png\n",
            " Problem with: drive/MyDrive/data/653.png\n",
            " Problem with: drive/MyDrive/data/659.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 14%|█▍        | 685/4861 [00:47<00:27, 149.97it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/665.png\n",
            " Problem with: drive/MyDrive/data/672.png\n",
            " Problem with: drive/MyDrive/data/673.png\n",
            " Problem with: drive/MyDrive/data/676.png\n",
            " Problem with: drive/MyDrive/data/677.png\n",
            " Problem with: drive/MyDrive/data/679.png\n",
            " Problem with: drive/MyDrive/data/681.png\n",
            " Problem with: drive/MyDrive/data/683.png\n",
            " Problem with: drive/MyDrive/data/685.png\n",
            " Problem with: drive/MyDrive/data/688.png\n",
            " Problem with: drive/MyDrive/data/691.png\n",
            " Problem with: drive/MyDrive/data/692.png\n",
            " Problem with: drive/MyDrive/data/697.png\n",
            " Problem with: drive/MyDrive/data/698.png\n",
            " Problem with: drive/MyDrive/data/699.png\n",
            " Problem with: drive/MyDrive/data/701.png\n",
            " Problem with: drive/MyDrive/data/703.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 15%|█▌        | 753/4861 [00:48<00:20, 196.08it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/708.png\n",
            " Problem with: drive/MyDrive/data/709.png\n",
            " Problem with: drive/MyDrive/data/713.png\n",
            " Problem with: drive/MyDrive/data/716.png\n",
            " Problem with: drive/MyDrive/data/720.png\n",
            " Problem with: drive/MyDrive/data/721.png\n",
            " Problem with: drive/MyDrive/data/722.png\n",
            " Problem with: drive/MyDrive/data/723.png\n",
            " Problem with: drive/MyDrive/data/724.png\n",
            " Problem with: drive/MyDrive/data/727.png\n",
            " Problem with: drive/MyDrive/data/730.png\n",
            " Problem with: drive/MyDrive/data/732.png\n",
            " Problem with: drive/MyDrive/data/733.png\n",
            " Problem with: drive/MyDrive/data/734.png\n",
            " Problem with: drive/MyDrive/data/737.png\n",
            " Problem with: drive/MyDrive/data/738.png\n",
            " Problem with: drive/MyDrive/data/742.png\n",
            " Problem with: drive/MyDrive/data/743.png\n",
            " Problem with: drive/MyDrive/data/744.png\n",
            " Problem with: drive/MyDrive/data/745.png\n",
            " Problem with: drive/MyDrive/data/746.png\n",
            " Problem with: drive/MyDrive/data/747.png\n",
            " Problem with: drive/MyDrive/data/748.png\n",
            " Problem with: drive/MyDrive/data/749.png\n",
            " Problem with: drive/MyDrive/data/755.png\n",
            " Problem with: drive/MyDrive/data/757.png\n",
            " Problem with: drive/MyDrive/data/758.png\n",
            " Problem with: drive/MyDrive/data/762.png\n",
            " Problem with: drive/MyDrive/data/763.png\n",
            " Problem with: drive/MyDrive/data/764.png\n",
            " Problem with: drive/MyDrive/data/765.png\n",
            " Problem with: drive/MyDrive/data/766.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 16%|█▌        | 775/4861 [00:48<00:43, 94.44it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/768.png\n",
            " Problem with: drive/MyDrive/data/769.png\n",
            " Problem with: drive/MyDrive/data/772.png\n",
            " Problem with: drive/MyDrive/data/773.png\n",
            " Problem with: drive/MyDrive/data/774.png\n",
            " Problem with: drive/MyDrive/data/775.png\n",
            " Problem with: drive/MyDrive/data/777.png\n",
            " Problem with: drive/MyDrive/data/780.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 16%|█▋        | 792/4861 [00:49<01:02, 64.81it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/785.png\n",
            " Problem with: drive/MyDrive/data/786.png\n",
            " Problem with: drive/MyDrive/data/787.png\n",
            " Problem with: drive/MyDrive/data/789.png\n",
            " Problem with: drive/MyDrive/data/790.png\n",
            " Problem with: drive/MyDrive/data/791.png\n",
            " Problem with: drive/MyDrive/data/792.png\n",
            " Problem with: drive/MyDrive/data/793.png\n",
            " Problem with: drive/MyDrive/data/794.png\n",
            " Problem with: drive/MyDrive/data/796.png\n",
            " Problem with: drive/MyDrive/data/797.png\n",
            " Problem with: drive/MyDrive/data/798.png\n",
            " Problem with: drive/MyDrive/data/799.png\n",
            " Problem with: drive/MyDrive/data/800.png\n",
            " Problem with: drive/MyDrive/data/803.png\n",
            " Problem with: drive/MyDrive/data/805.png\n",
            " Problem with: drive/MyDrive/data/807.png\n",
            " Problem with: drive/MyDrive/data/809.png\n",
            " Problem with: drive/MyDrive/data/812.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 17%|█▋        | 832/4861 [00:49<01:02, 64.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/818.png\n",
            " Problem with: drive/MyDrive/data/822.png\n",
            " Problem with: drive/MyDrive/data/827.png\n",
            " Problem with: drive/MyDrive/data/829.png\n",
            " Problem with: drive/MyDrive/data/830.png\n",
            " Problem with: drive/MyDrive/data/835.png\n",
            " Problem with: drive/MyDrive/data/837.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 18%|█▊        | 865/4861 [00:50<01:03, 62.76it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/839.png\n",
            " Problem with: drive/MyDrive/data/842.png\n",
            " Problem with: drive/MyDrive/data/844.png\n",
            " Problem with: drive/MyDrive/data/849.png\n",
            " Problem with: drive/MyDrive/data/851.png\n",
            " Problem with: drive/MyDrive/data/852.png\n",
            " Problem with: drive/MyDrive/data/853.png\n",
            " Problem with: drive/MyDrive/data/855.png\n",
            " Problem with: drive/MyDrive/data/858.png\n",
            " Problem with: drive/MyDrive/data/863.png\n",
            " Problem with: drive/MyDrive/data/864.png\n",
            " Problem with: drive/MyDrive/data/866.png\n",
            " Problem with: drive/MyDrive/data/868.png\n",
            " Problem with: drive/MyDrive/data/869.png\n",
            " Problem with: drive/MyDrive/data/870.png\n",
            " Problem with: drive/MyDrive/data/872.png\n",
            " Problem with: drive/MyDrive/data/873.png\n",
            " Problem with: drive/MyDrive/data/874.png\n",
            " Problem with: drive/MyDrive/data/878.png\n",
            " Problem with: drive/MyDrive/data/880.png\n",
            " Problem with: drive/MyDrive/data/881.png\n",
            " Problem with: drive/MyDrive/data/882.png\n",
            " Problem with: drive/MyDrive/data/883.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 19%|█▊        | 910/4861 [00:50<00:38, 102.84it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/885.png\n",
            " Problem with: drive/MyDrive/data/888.png\n",
            " Problem with: drive/MyDrive/data/889.png\n",
            " Problem with: drive/MyDrive/data/890.png\n",
            " Problem with: drive/MyDrive/data/894.png\n",
            " Problem with: drive/MyDrive/data/896.png\n",
            " Problem with: drive/MyDrive/data/901.png\n",
            " Problem with: drive/MyDrive/data/904.png\n",
            " Problem with: drive/MyDrive/data/905.png\n",
            " Problem with: drive/MyDrive/data/906.png\n",
            " Problem with: drive/MyDrive/data/908.png\n",
            " Problem with: drive/MyDrive/data/912.png\n",
            " Problem with: drive/MyDrive/data/913.png\n",
            " Problem with: drive/MyDrive/data/914.png\n",
            " Problem with: drive/MyDrive/data/918.png\n",
            " Problem with: drive/MyDrive/data/919.png\n",
            " Problem with: drive/MyDrive/data/920.png\n",
            " Problem with: drive/MyDrive/data/922.png\n",
            " Problem with: drive/MyDrive/data/924.png\n",
            " Problem with: drive/MyDrive/data/926.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 20%|█▉        | 969/4861 [00:51<00:42, 91.20it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/929.png\n",
            " Problem with: drive/MyDrive/data/930.png\n",
            " Problem with: drive/MyDrive/data/936.png\n",
            " Problem with: drive/MyDrive/data/941.png\n",
            " Problem with: drive/MyDrive/data/942.png\n",
            " Problem with: drive/MyDrive/data/943.png\n",
            " Problem with: drive/MyDrive/data/944.png\n",
            " Problem with: drive/MyDrive/data/947.png\n",
            " Problem with: drive/MyDrive/data/950.png\n",
            " Problem with: drive/MyDrive/data/951.png\n",
            " Problem with: drive/MyDrive/data/955.png\n",
            " Problem with: drive/MyDrive/data/957.png\n",
            " Problem with: drive/MyDrive/data/961.png\n",
            " Problem with: drive/MyDrive/data/962.png\n",
            " Problem with: drive/MyDrive/data/969.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 20%|██        | 986/4861 [00:51<00:37, 103.62it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/970.png\n",
            " Problem with: drive/MyDrive/data/976.png\n",
            " Problem with: drive/MyDrive/data/977.png\n",
            " Problem with: drive/MyDrive/data/981.png\n",
            " Problem with: drive/MyDrive/data/985.png\n",
            " Problem with: drive/MyDrive/data/986.png\n",
            " Problem with: drive/MyDrive/data/987.png\n",
            " Problem with: drive/MyDrive/data/988.png\n",
            " Problem with: drive/MyDrive/data/989.png\n",
            " Problem with: drive/MyDrive/data/992.png\n",
            " Problem with: drive/MyDrive/data/994.png\n",
            " Problem with: drive/MyDrive/data/996.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 21%|██        | 1003/4861 [00:52<01:27, 43.98it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/999.png\n",
            " Problem with: drive/MyDrive/data/1000.png\n",
            " Problem with: drive/MyDrive/data/1005.png\n",
            " Problem with: drive/MyDrive/data/1006.png\n",
            " Problem with: drive/MyDrive/data/1008.png\n",
            " Problem with: drive/MyDrive/data/1011.png\n",
            " Problem with: drive/MyDrive/data/1016.png\n",
            " Problem with: drive/MyDrive/data/1017.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 22%|██▏       | 1063/4861 [00:53<00:51, 73.60it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1022.png\n",
            " Problem with: drive/MyDrive/data/1025.png\n",
            " Problem with: drive/MyDrive/data/1028.png\n",
            " Problem with: drive/MyDrive/data/1029.png\n",
            " Problem with: drive/MyDrive/data/1031.png\n",
            " Problem with: drive/MyDrive/data/1036.png\n",
            " Problem with: drive/MyDrive/data/1038.png\n",
            " Problem with: drive/MyDrive/data/1039.png\n",
            " Problem with: drive/MyDrive/data/1040.png\n",
            " Problem with: drive/MyDrive/data/1041.png\n",
            " Problem with: drive/MyDrive/data/1042.png\n",
            " Problem with: drive/MyDrive/data/1044.png\n",
            " Problem with: drive/MyDrive/data/1047.png\n",
            " Problem with: drive/MyDrive/data/1052.png\n",
            " Problem with: drive/MyDrive/data/1053.png\n",
            " Problem with: drive/MyDrive/data/1055.png\n",
            " Problem with: drive/MyDrive/data/1057.png\n",
            " Problem with: drive/MyDrive/data/1058.png\n",
            " Problem with: drive/MyDrive/data/1059.png\n",
            " Problem with: drive/MyDrive/data/1062.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 23%|██▎       | 1114/4861 [00:53<00:30, 122.56it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1066.png\n",
            " Problem with: drive/MyDrive/data/1070.png\n",
            " Problem with: drive/MyDrive/data/1071.png\n",
            " Problem with: drive/MyDrive/data/1073.png\n",
            " Problem with: drive/MyDrive/data/1074.png\n",
            " Problem with: drive/MyDrive/data/1075.png\n",
            " Problem with: drive/MyDrive/data/1077.png\n",
            " Problem with: drive/MyDrive/data/1079.png\n",
            " Problem with: drive/MyDrive/data/1081.png\n",
            " Problem with: drive/MyDrive/data/1082.png\n",
            " Problem with: drive/MyDrive/data/1083.png\n",
            " Problem with: drive/MyDrive/data/1084.png\n",
            " Problem with: drive/MyDrive/data/1085.png\n",
            " Problem with: drive/MyDrive/data/1086.png\n",
            " Problem with: drive/MyDrive/data/1088.png\n",
            " Problem with: drive/MyDrive/data/1093.png\n",
            " Problem with: drive/MyDrive/data/1095.png\n",
            " Problem with: drive/MyDrive/data/1096.png\n",
            " Problem with: drive/MyDrive/data/1097.png\n",
            " Problem with: drive/MyDrive/data/1099.png\n",
            " Problem with: drive/MyDrive/data/1100.png\n",
            " Problem with: drive/MyDrive/data/1103.png\n",
            " Problem with: drive/MyDrive/data/1105.png\n",
            " Problem with: drive/MyDrive/data/1106.png\n",
            " Problem with: drive/MyDrive/data/1107.png\n",
            " Problem with: drive/MyDrive/data/1108.png\n",
            " Problem with: drive/MyDrive/data/1110.png\n",
            " Problem with: drive/MyDrive/data/1112.png\n",
            " Problem with: drive/MyDrive/data/1113.png\n",
            " Problem with: drive/MyDrive/data/1115.png\n",
            " Problem with: drive/MyDrive/data/1117.png\n",
            " Problem with: drive/MyDrive/data/1118.png\n",
            " Problem with: drive/MyDrive/data/1119.png\n",
            " Problem with: drive/MyDrive/data/1120.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 24%|██▍       | 1164/4861 [00:53<00:22, 164.22it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1122.png\n",
            " Problem with: drive/MyDrive/data/1123.png\n",
            " Problem with: drive/MyDrive/data/1124.png\n",
            " Problem with: drive/MyDrive/data/1125.png\n",
            " Problem with: drive/MyDrive/data/1127.png\n",
            " Problem with: drive/MyDrive/data/1128.png\n",
            " Problem with: drive/MyDrive/data/1129.png\n",
            " Problem with: drive/MyDrive/data/1130.png\n",
            " Problem with: drive/MyDrive/data/1132.png\n",
            " Problem with: drive/MyDrive/data/1135.png\n",
            " Problem with: drive/MyDrive/data/1139.png\n",
            " Problem with: drive/MyDrive/data/1140.png\n",
            " Problem with: drive/MyDrive/data/1147.png\n",
            " Problem with: drive/MyDrive/data/1149.png\n",
            " Problem with: drive/MyDrive/data/1150.png\n",
            " Problem with: drive/MyDrive/data/1151.png\n",
            " Problem with: drive/MyDrive/data/1153.png\n",
            " Problem with: drive/MyDrive/data/1154.png\n",
            " Problem with: drive/MyDrive/data/1155.png\n",
            " Problem with: drive/MyDrive/data/1159.png\n",
            " Problem with: drive/MyDrive/data/1162.png\n",
            " Problem with: drive/MyDrive/data/1164.png\n",
            " Problem with: drive/MyDrive/data/1166.png\n",
            " Problem with: drive/MyDrive/data/1167.png\n",
            " Problem with: drive/MyDrive/data/1169.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 25%|██▍       | 1209/4861 [00:54<00:19, 188.34it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1170.png\n",
            " Problem with: drive/MyDrive/data/1171.png\n",
            " Problem with: drive/MyDrive/data/1173.png\n",
            " Problem with: drive/MyDrive/data/1174.png\n",
            " Problem with: drive/MyDrive/data/1176.png\n",
            " Problem with: drive/MyDrive/data/1177.png\n",
            " Problem with: drive/MyDrive/data/1178.png\n",
            " Problem with: drive/MyDrive/data/1187.png\n",
            " Problem with: drive/MyDrive/data/1188.png\n",
            " Problem with: drive/MyDrive/data/1189.png\n",
            " Problem with: drive/MyDrive/data/1190.png\n",
            " Problem with: drive/MyDrive/data/1191.png\n",
            " Problem with: drive/MyDrive/data/1192.png\n",
            " Problem with: drive/MyDrive/data/1195.png\n",
            " Problem with: drive/MyDrive/data/1196.png\n",
            " Problem with: drive/MyDrive/data/1204.png\n",
            " Problem with: drive/MyDrive/data/1205.png\n",
            " Problem with: drive/MyDrive/data/1207.png\n",
            " Problem with: drive/MyDrive/data/1208.png\n",
            " Problem with: drive/MyDrive/data/1210.png\n",
            " Problem with: drive/MyDrive/data/1211.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 26%|██▌       | 1258/4861 [00:54<00:16, 212.81it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1215.png\n",
            " Problem with: drive/MyDrive/data/1217.png\n",
            " Problem with: drive/MyDrive/data/1218.png\n",
            " Problem with: drive/MyDrive/data/1219.png\n",
            " Problem with: drive/MyDrive/data/1220.png\n",
            " Problem with: drive/MyDrive/data/1221.png\n",
            " Problem with: drive/MyDrive/data/1225.png\n",
            " Problem with: drive/MyDrive/data/1230.png\n",
            " Problem with: drive/MyDrive/data/1235.png\n",
            " Problem with: drive/MyDrive/data/1238.png\n",
            " Problem with: drive/MyDrive/data/1239.png\n",
            " Problem with: drive/MyDrive/data/1240.png\n",
            " Problem with: drive/MyDrive/data/1242.png\n",
            " Problem with: drive/MyDrive/data/1244.png\n",
            " Problem with: drive/MyDrive/data/1246.png\n",
            " Problem with: drive/MyDrive/data/1250.png\n",
            " Problem with: drive/MyDrive/data/1251.png\n",
            " Problem with: drive/MyDrive/data/1252.png\n",
            " Problem with: drive/MyDrive/data/1254.png\n",
            " Problem with: drive/MyDrive/data/1255.png\n",
            " Problem with: drive/MyDrive/data/1256.png\n",
            " Problem with: drive/MyDrive/data/1257.png\n",
            " Problem with: drive/MyDrive/data/1258.png\n",
            " Problem with: drive/MyDrive/data/1259.png\n",
            " Problem with: drive/MyDrive/data/1262.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 26%|██▋       | 1283/4861 [00:54<00:16, 219.20it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1265.png\n",
            " Problem with: drive/MyDrive/data/1266.png\n",
            " Problem with: drive/MyDrive/data/1267.png\n",
            " Problem with: drive/MyDrive/data/1268.png\n",
            " Problem with: drive/MyDrive/data/1270.png\n",
            " Problem with: drive/MyDrive/data/1271.png\n",
            " Problem with: drive/MyDrive/data/1272.png\n",
            " Problem with: drive/MyDrive/data/1273.png\n",
            " Problem with: drive/MyDrive/data/1275.png\n",
            " Problem with: drive/MyDrive/data/1280.png\n",
            " Problem with: drive/MyDrive/data/1281.png\n",
            " Problem with: drive/MyDrive/data/1282.png\n",
            " Problem with: drive/MyDrive/data/1284.png\n",
            " Problem with: drive/MyDrive/data/1285.png\n",
            " Problem with: drive/MyDrive/data/1288.png\n",
            " Problem with: drive/MyDrive/data/1290.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 27%|██▋       | 1307/4861 [00:54<00:36, 97.28it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1293.png\n",
            " Problem with: drive/MyDrive/data/1294.png\n",
            " Problem with: drive/MyDrive/data/1297.png\n",
            " Problem with: drive/MyDrive/data/1299.png\n",
            " Problem with: drive/MyDrive/data/1300.png\n",
            " Problem with: drive/MyDrive/data/1301.png\n",
            " Problem with: drive/MyDrive/data/1302.png\n",
            " Problem with: drive/MyDrive/data/1303.png\n",
            " Problem with: drive/MyDrive/data/1307.png\n",
            " Problem with: drive/MyDrive/data/1312.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 28%|██▊       | 1347/4861 [00:55<00:43, 80.92it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1320.png\n",
            " Problem with: drive/MyDrive/data/1321.png\n",
            " Problem with: drive/MyDrive/data/1322.png\n",
            " Problem with: drive/MyDrive/data/1324.png\n",
            " Problem with: drive/MyDrive/data/1331.png\n",
            " Problem with: drive/MyDrive/data/1332.png\n",
            " Problem with: drive/MyDrive/data/1333.png\n",
            " Problem with: drive/MyDrive/data/1336.png\n",
            " Problem with: drive/MyDrive/data/1337.png\n",
            " Problem with: drive/MyDrive/data/1339.png\n",
            " Problem with: drive/MyDrive/data/1340.png\n",
            " Problem with: drive/MyDrive/data/1341.png\n",
            " Problem with: drive/MyDrive/data/1345.png\n",
            " Problem with: drive/MyDrive/data/1347.png\n",
            " Problem with: drive/MyDrive/data/1348.png\n",
            " Problem with: drive/MyDrive/data/1349.png\n",
            " Problem with: drive/MyDrive/data/1350.png\n",
            " Problem with: drive/MyDrive/data/1352.png\n",
            " Problem with: drive/MyDrive/data/1356.png\n",
            " Problem with: drive/MyDrive/data/1357.png\n",
            " Problem with: drive/MyDrive/data/1358.png\n",
            " Problem with: drive/MyDrive/data/1360.png\n",
            " Problem with: drive/MyDrive/data/1361.png\n",
            " Problem with: drive/MyDrive/data/1364.png\n",
            " Problem with: drive/MyDrive/data/1365.png\n",
            " Problem with: drive/MyDrive/data/1367.png\n",
            " Problem with: drive/MyDrive/data/1368.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 29%|██▊       | 1395/4861 [00:55<00:28, 123.32it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1371.png\n",
            " Problem with: drive/MyDrive/data/1373.png\n",
            " Problem with: drive/MyDrive/data/1377.png\n",
            " Problem with: drive/MyDrive/data/1378.png\n",
            " Problem with: drive/MyDrive/data/1380.png\n",
            " Problem with: drive/MyDrive/data/1381.png\n",
            " Problem with: drive/MyDrive/data/1383.png\n",
            " Problem with: drive/MyDrive/data/1384.png\n",
            " Problem with: drive/MyDrive/data/1386.png\n",
            " Problem with: drive/MyDrive/data/1388.png\n",
            " Problem with: drive/MyDrive/data/1389.png\n",
            " Problem with: drive/MyDrive/data/1390.png\n",
            " Problem with: drive/MyDrive/data/1391.png\n",
            " Problem with: drive/MyDrive/data/1397.png\n",
            " Problem with: drive/MyDrive/data/1398.png\n",
            " Problem with: drive/MyDrive/data/1400.png\n",
            " Problem with: drive/MyDrive/data/1403.png\n",
            " Problem with: drive/MyDrive/data/1409.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 30%|███       | 1461/4861 [00:56<00:20, 167.46it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1417.png\n",
            " Problem with: drive/MyDrive/data/1419.png\n",
            " Problem with: drive/MyDrive/data/1420.png\n",
            " Problem with: drive/MyDrive/data/1421.png\n",
            " Problem with: drive/MyDrive/data/1423.png\n",
            " Problem with: drive/MyDrive/data/1424.png\n",
            " Problem with: drive/MyDrive/data/1430.png\n",
            " Problem with: drive/MyDrive/data/1432.png\n",
            " Problem with: drive/MyDrive/data/1433.png\n",
            " Problem with: drive/MyDrive/data/1434.png\n",
            " Problem with: drive/MyDrive/data/1435.png\n",
            " Problem with: drive/MyDrive/data/1437.png\n",
            " Problem with: drive/MyDrive/data/1440.png\n",
            " Problem with: drive/MyDrive/data/1441.png\n",
            " Problem with: drive/MyDrive/data/1444.png\n",
            " Problem with: drive/MyDrive/data/1448.png\n",
            " Problem with: drive/MyDrive/data/1449.png\n",
            " Problem with: drive/MyDrive/data/1456.png\n",
            " Problem with: drive/MyDrive/data/1457.png\n",
            " Problem with: drive/MyDrive/data/1460.png\n",
            " Problem with: drive/MyDrive/data/1461.png\n",
            " Problem with: drive/MyDrive/data/1462.png"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 30%|███       | 1482/4861 [00:56<00:19, 173.26it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Problem with: drive/MyDrive/data/1463.png\n",
            " Problem with: drive/MyDrive/data/1464.png\n",
            " Problem with: drive/MyDrive/data/1468.png\n",
            " Problem with: drive/MyDrive/data/1476.png\n",
            " Problem with: drive/MyDrive/data/1481.png\n",
            " Problem with: drive/MyDrive/data/1484.png\n",
            " Problem with: drive/MyDrive/data/1486.png\n",
            " Problem with: drive/MyDrive/data/1489.png\n",
            " Problem with: drive/MyDrive/data/1491.png\n",
            " Problem with: drive/MyDrive/data/1494.png\n",
            " Problem with: drive/MyDrive/data/1495.png\n",
            " Problem with: drive/MyDrive/data/1498.png\n",
            " Problem with: drive/MyDrive/data/1500.png\n",
            " Problem with: drive/MyDrive/data/1501.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 32%|███▏      | 1550/4861 [00:56<00:16, 200.99it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1504.png\n",
            " Problem with: drive/MyDrive/data/1506.png\n",
            " Problem with: drive/MyDrive/data/1508.png\n",
            " Problem with: drive/MyDrive/data/1509.png\n",
            " Problem with: drive/MyDrive/data/1511.png\n",
            " Problem with: drive/MyDrive/data/1512.png\n",
            " Problem with: drive/MyDrive/data/1514.png\n",
            " Problem with: drive/MyDrive/data/1515.png\n",
            " Problem with: drive/MyDrive/data/1516.png\n",
            " Problem with: drive/MyDrive/data/1517.png\n",
            " Problem with: drive/MyDrive/data/1519.png\n",
            " Problem with: drive/MyDrive/data/1520.png\n",
            " Problem with: drive/MyDrive/data/1522.png\n",
            " Problem with: drive/MyDrive/data/1529.png\n",
            " Problem with: drive/MyDrive/data/1531.png\n",
            " Problem with: drive/MyDrive/data/1533.png\n",
            " Problem with: drive/MyDrive/data/1535.png\n",
            " Problem with: drive/MyDrive/data/1538.png\n",
            " Problem with: drive/MyDrive/data/1541.png\n",
            " Problem with: drive/MyDrive/data/1542.png\n",
            " Problem with: drive/MyDrive/data/1543.png\n",
            " Problem with: drive/MyDrive/data/1544.png\n",
            " Problem with: drive/MyDrive/data/1545.png\n",
            " Problem with: drive/MyDrive/data/1546.png\n",
            " Problem with: drive/MyDrive/data/1548.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 32%|███▏      | 1572/4861 [00:56<00:16, 196.01it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1551.png\n",
            " Problem with: drive/MyDrive/data/1557.png\n",
            " Problem with: drive/MyDrive/data/1558.png\n",
            " Problem with: drive/MyDrive/data/1561.png\n",
            " Problem with: drive/MyDrive/data/1562.png\n",
            " Problem with: drive/MyDrive/data/1564.png\n",
            " Problem with: drive/MyDrive/data/1566.png\n",
            " Problem with: drive/MyDrive/data/1568.png\n",
            " Problem with: drive/MyDrive/data/1570.png\n",
            " Problem with: drive/MyDrive/data/1575.png\n",
            " Problem with: drive/MyDrive/data/1576.png\n",
            " Problem with: drive/MyDrive/data/1577.png\n",
            " Problem with: drive/MyDrive/data/1578.png\n",
            " Problem with: drive/MyDrive/data/1579.png\n",
            " Problem with: drive/MyDrive/data/1582.png\n",
            " Problem with: drive/MyDrive/data/1583.png\n",
            " Problem with: drive/MyDrive/data/1584.png\n",
            " Problem with: drive/MyDrive/data/1585.png\n",
            " Problem with: drive/MyDrive/data/1587.png\n",
            " Problem with: drive/MyDrive/data/1588.png\n",
            " Problem with: drive/MyDrive/data/1589.png\n",
            " Problem with: drive/MyDrive/data/1590.png\n",
            " Problem with: drive/MyDrive/data/1591.png\n",
            " Problem with: drive/MyDrive/data/1592.png\n",
            " Problem with: drive/MyDrive/data/1594.png\n",
            " Problem with: drive/MyDrive/data/1596.png\n",
            " Problem with: drive/MyDrive/data/1597.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 33%|███▎      | 1622/4861 [00:56<00:15, 203.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1602.png\n",
            " Problem with: drive/MyDrive/data/1606.png\n",
            " Problem with: drive/MyDrive/data/1608.png\n",
            " Problem with: drive/MyDrive/data/1612.png\n",
            " Problem with: drive/MyDrive/data/1614.png\n",
            " Problem with: drive/MyDrive/data/1619.png\n",
            " Problem with: drive/MyDrive/data/1621.png\n",
            " Problem with: drive/MyDrive/data/1622.png\n",
            " Problem with: drive/MyDrive/data/1623.png\n",
            " Problem with: drive/MyDrive/data/1627.png\n",
            " Problem with: drive/MyDrive/data/1628.png\n",
            " Problem with: drive/MyDrive/data/1629.png\n",
            " Problem with: drive/MyDrive/data/1634.png\n",
            " Problem with: drive/MyDrive/data/1635.png\n",
            " Problem with: drive/MyDrive/data/1636.png\n",
            " Problem with: drive/MyDrive/data/1641.png\n",
            " Problem with: drive/MyDrive/data/1642.png\n",
            " Problem with: drive/MyDrive/data/1643.png\n",
            " Problem with: drive/MyDrive/data/1644.png\n",
            " Problem with: drive/MyDrive/data/1645.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 35%|███▍      | 1698/4861 [00:57<00:13, 229.76it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1647.png\n",
            " Problem with: drive/MyDrive/data/1649.png\n",
            " Problem with: drive/MyDrive/data/1650.png\n",
            " Problem with: drive/MyDrive/data/1652.png\n",
            " Problem with: drive/MyDrive/data/1654.png\n",
            " Problem with: drive/MyDrive/data/1656.png\n",
            " Problem with: drive/MyDrive/data/1658.png\n",
            " Problem with: drive/MyDrive/data/1659.png\n",
            " Problem with: drive/MyDrive/data/1661.png\n",
            " Problem with: drive/MyDrive/data/1662.png\n",
            " Problem with: drive/MyDrive/data/1665.png\n",
            " Problem with: drive/MyDrive/data/1667.png\n",
            " Problem with: drive/MyDrive/data/1669.png\n",
            " Problem with: drive/MyDrive/data/1670.png\n",
            " Problem with: drive/MyDrive/data/1674.png\n",
            " Problem with: drive/MyDrive/data/1675.png\n",
            " Problem with: drive/MyDrive/data/1677.png\n",
            " Problem with: drive/MyDrive/data/1679.png\n",
            " Problem with: drive/MyDrive/data/1680.png\n",
            " Problem with: drive/MyDrive/data/1681.png\n",
            " Problem with: drive/MyDrive/data/1685.png\n",
            " Problem with: drive/MyDrive/data/1687.png\n",
            " Problem with: drive/MyDrive/data/1690.png\n",
            " Problem with: drive/MyDrive/data/1691.png\n",
            " Problem with: drive/MyDrive/data/1693.png\n",
            " Problem with: drive/MyDrive/data/1694.png\n",
            " Problem with: drive/MyDrive/data/1695.png\n",
            " Problem with: drive/MyDrive/data/1696.png\n",
            " Problem with: drive/MyDrive/data/1697.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 35%|███▌      | 1723/4861 [00:57<00:13, 233.56it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1699.png\n",
            " Problem with: drive/MyDrive/data/1701.png\n",
            " Problem with: drive/MyDrive/data/1702.png\n",
            " Problem with: drive/MyDrive/data/1703.png\n",
            " Problem with: drive/MyDrive/data/1705.png\n",
            " Problem with: drive/MyDrive/data/1707.png\n",
            " Problem with: drive/MyDrive/data/1708.png\n",
            " Problem with: drive/MyDrive/data/1709.png\n",
            " Problem with: drive/MyDrive/data/1711.png\n",
            " Problem with: drive/MyDrive/data/1713.png\n",
            " Problem with: drive/MyDrive/data/1715.png\n",
            " Problem with: drive/MyDrive/data/1718.png\n",
            " Problem with: drive/MyDrive/data/1719.png\n",
            " Problem with: drive/MyDrive/data/1721.png\n",
            " Problem with: drive/MyDrive/data/1726.png\n",
            " Problem with: drive/MyDrive/data/1729.png\n",
            " Problem with: drive/MyDrive/data/1731.png\n",
            " Problem with: drive/MyDrive/data/1732.png\n",
            " Problem with: drive/MyDrive/data/1733.png\n",
            " Problem with: drive/MyDrive/data/1735.png\n",
            " Problem with: drive/MyDrive/data/1737.png\n",
            " Problem with: drive/MyDrive/data/1744.png\n",
            " Problem with: drive/MyDrive/data/1745.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 36%|███▌      | 1747/4861 [00:57<00:13, 223.75it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1747.png\n",
            " Problem with: drive/MyDrive/data/1754.png\n",
            " Problem with: drive/MyDrive/data/1757.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 36%|███▋      | 1770/4861 [00:58<00:32, 95.48it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1759.png\n",
            " Problem with: drive/MyDrive/data/1763.png\n",
            " Problem with: drive/MyDrive/data/1764.png\n",
            " Problem with: drive/MyDrive/data/1767.png\n",
            " Problem with: drive/MyDrive/data/1768.png\n",
            " Problem with: drive/MyDrive/data/1769.png\n",
            " Problem with: drive/MyDrive/data/1771.png\n",
            " Problem with: drive/MyDrive/data/1773.png\n",
            " Problem with: drive/MyDrive/data/1775.png\n",
            " Problem with: drive/MyDrive/data/1776.png\n",
            " Problem with: drive/MyDrive/data/1777.png\n",
            " Problem with: drive/MyDrive/data/1778.png\n",
            " Problem with: drive/MyDrive/data/1782.png\n",
            " Problem with: drive/MyDrive/data/1783.png\n",
            " Problem with: drive/MyDrive/data/1788.png\n",
            " Problem with: drive/MyDrive/data/1790.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 37%|███▋      | 1810/4861 [00:58<00:37, 81.20it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1792.png\n",
            " Problem with: drive/MyDrive/data/1793.png\n",
            " Problem with: drive/MyDrive/data/1794.png\n",
            " Problem with: drive/MyDrive/data/1796.png\n",
            " Problem with: drive/MyDrive/data/1799.png\n",
            " Problem with: drive/MyDrive/data/1803.png\n",
            " Problem with: drive/MyDrive/data/1804.png\n",
            " Problem with: drive/MyDrive/data/1805.png\n",
            " Problem with: drive/MyDrive/data/1806.png\n",
            " Problem with: drive/MyDrive/data/1812.png\n",
            " Problem with: drive/MyDrive/data/1814.png\n",
            " Problem with: drive/MyDrive/data/1815.png\n",
            " Problem with: drive/MyDrive/data/1818.png\n",
            " Problem with: drive/MyDrive/data/1819.png\n",
            " Problem with: drive/MyDrive/data/1821.png\n",
            " Problem with: drive/MyDrive/data/1822.png\n",
            " Problem with: drive/MyDrive/data/1828.png\n",
            " Problem with: drive/MyDrive/data/1830.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 38%|███▊      | 1832/4861 [00:58<00:30, 98.55it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1833.png\n",
            " Problem with: drive/MyDrive/data/1835.png\n",
            " Problem with: drive/MyDrive/data/1837.png\n",
            " Problem with: drive/MyDrive/data/1840.png\n",
            " Problem with: drive/MyDrive/data/1842.png\n",
            " Problem with: drive/MyDrive/data/1843.png\n",
            " Problem with: drive/MyDrive/data/1845.png\n",
            " Problem with: drive/MyDrive/data/1849.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 38%|███▊      | 1851/4861 [00:59<00:48, 62.23it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1852.png\n",
            " Problem with: drive/MyDrive/data/1857.png\n",
            " Problem with: drive/MyDrive/data/1861.png\n",
            " Problem with: drive/MyDrive/data/1863.png\n",
            " Problem with: drive/MyDrive/data/1864.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 39%|███▉      | 1916/4861 [01:00<00:33, 88.28it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1869.png\n",
            " Problem with: drive/MyDrive/data/1870.png\n",
            " Problem with: drive/MyDrive/data/1875.png\n",
            " Problem with: drive/MyDrive/data/1878.png\n",
            " Problem with: drive/MyDrive/data/1881.png\n",
            " Problem with: drive/MyDrive/data/1882.png\n",
            " Problem with: drive/MyDrive/data/1883.png\n",
            " Problem with: drive/MyDrive/data/1884.png\n",
            " Problem with: drive/MyDrive/data/1885.png\n",
            " Problem with: drive/MyDrive/data/1887.png\n",
            " Problem with: drive/MyDrive/data/1890.png\n",
            " Problem with: drive/MyDrive/data/1891.png\n",
            " Problem with: drive/MyDrive/data/1893.png\n",
            " Problem with: drive/MyDrive/data/1894.png\n",
            " Problem with: drive/MyDrive/data/1895.png\n",
            " Problem with: drive/MyDrive/data/1897.png\n",
            " Problem with: drive/MyDrive/data/1898.png\n",
            " Problem with: drive/MyDrive/data/1899.png\n",
            " Problem with: drive/MyDrive/data/1900.png\n",
            " Problem with: drive/MyDrive/data/1903.png\n",
            " Problem with: drive/MyDrive/data/1906.png\n",
            " Problem with: drive/MyDrive/data/1908.png\n",
            " Problem with: drive/MyDrive/data/1914.png\n",
            " Problem with: drive/MyDrive/data/1915.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 40%|███▉      | 1943/4861 [01:00<00:25, 114.75it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1918.png\n",
            " Problem with: drive/MyDrive/data/1920.png\n",
            " Problem with: drive/MyDrive/data/1921.png\n",
            " Problem with: drive/MyDrive/data/1922.png\n",
            " Problem with: drive/MyDrive/data/1923.png\n",
            " Problem with: drive/MyDrive/data/1925.png\n",
            " Problem with: drive/MyDrive/data/1926.png\n",
            " Problem with: drive/MyDrive/data/1927.png\n",
            " Problem with: drive/MyDrive/data/1928.png\n",
            " Problem with: drive/MyDrive/data/1930.png\n",
            " Problem with: drive/MyDrive/data/1931.png\n",
            " Problem with: drive/MyDrive/data/1933.png\n",
            " Problem with: drive/MyDrive/data/1934.png\n",
            " Problem with: drive/MyDrive/data/1936.png\n",
            " Problem with: drive/MyDrive/data/1939.png\n",
            " Problem with: drive/MyDrive/data/1946.png\n",
            " Problem with: drive/MyDrive/data/1947.png\n",
            " Problem with: drive/MyDrive/data/1948.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 40%|████      | 1963/4861 [01:00<00:41, 70.51it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1952.png\n",
            " Problem with: drive/MyDrive/data/1953.png\n",
            " Problem with: drive/MyDrive/data/1954.png\n",
            " Problem with: drive/MyDrive/data/1955.png\n",
            " Problem with: drive/MyDrive/data/1959.png\n",
            " Problem with: drive/MyDrive/data/1963.png\n",
            " Problem with: drive/MyDrive/data/1964.png\n",
            " Problem with: drive/MyDrive/data/1966.png\n",
            " Problem with: drive/MyDrive/data/1968.png\n",
            " Problem with: drive/MyDrive/data/1969.png\n",
            " Problem with: drive/MyDrive/data/1970.png\n",
            " Problem with: drive/MyDrive/data/1974.png\n",
            " Problem with: drive/MyDrive/data/1975.png\n",
            " Problem with: drive/MyDrive/data/1978.png\n",
            " Problem with: drive/MyDrive/data/1979.png\n",
            " Problem with: drive/MyDrive/data/1980.png\n",
            " Problem with: drive/MyDrive/data/1982.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 42%|████▏     | 2029/4861 [01:01<00:30, 92.69it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/1985.png\n",
            " Problem with: drive/MyDrive/data/1989.png\n",
            " Problem with: drive/MyDrive/data/1990.png\n",
            " Problem with: drive/MyDrive/data/1991.png\n",
            " Problem with: drive/MyDrive/data/1993.png\n",
            " Problem with: drive/MyDrive/data/1998.png\n",
            " Problem with: drive/MyDrive/data/1999.png\n",
            " Problem with: drive/MyDrive/data/2000.png\n",
            " Problem with: drive/MyDrive/data/2007.png\n",
            " Problem with: drive/MyDrive/data/2008.png\n",
            " Problem with: drive/MyDrive/data/2010.png\n",
            " Problem with: drive/MyDrive/data/2013.png\n",
            " Problem with: drive/MyDrive/data/2014.png\n",
            " Problem with: drive/MyDrive/data/2016.png\n",
            " Problem with: drive/MyDrive/data/2017.png\n",
            " Problem with: drive/MyDrive/data/2018.png\n",
            " Problem with: drive/MyDrive/data/2021.png\n",
            " Problem with: drive/MyDrive/data/2022.png\n",
            " Problem with: drive/MyDrive/data/2023.png\n",
            " Problem with: drive/MyDrive/data/2026.png\n",
            " Problem with: drive/MyDrive/data/2028.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 43%|████▎     | 2074/4861 [01:01<00:21, 129.82it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2031.png\n",
            " Problem with: drive/MyDrive/data/2032.png\n",
            " Problem with: drive/MyDrive/data/2035.png\n",
            " Problem with: drive/MyDrive/data/2038.png\n",
            " Problem with: drive/MyDrive/data/2039.png\n",
            " Problem with: drive/MyDrive/data/2042.png\n",
            " Problem with: drive/MyDrive/data/2045.png\n",
            " Problem with: drive/MyDrive/data/2046.png\n",
            " Problem with: drive/MyDrive/data/2047.png\n",
            " Problem with: drive/MyDrive/data/2048.png\n",
            " Problem with: drive/MyDrive/data/2049.png\n",
            " Problem with: drive/MyDrive/data/2050.png\n",
            " Problem with: drive/MyDrive/data/2051.png\n",
            " Problem with: drive/MyDrive/data/2053.png\n",
            " Problem with: drive/MyDrive/data/2054.png\n",
            " Problem with: drive/MyDrive/data/2055.png\n",
            " Problem with: drive/MyDrive/data/2059.png\n",
            " Problem with: drive/MyDrive/data/2060.png\n",
            " Problem with: drive/MyDrive/data/2062.png\n",
            " Problem with: drive/MyDrive/data/2063.png\n",
            " Problem with: drive/MyDrive/data/2070.png\n",
            " Problem with: drive/MyDrive/data/2072.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 43%|████▎     | 2094/4861 [01:01<00:19, 142.55it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2077.png\n",
            " Problem with: drive/MyDrive/data/2078.png\n",
            " Problem with: drive/MyDrive/data/2081.png\n",
            " Problem with: drive/MyDrive/data/2086.png\n",
            " Problem with: drive/MyDrive/data/2087.png\n",
            " Problem with: drive/MyDrive/data/2088.png\n",
            " Problem with: drive/MyDrive/data/2093.png\n",
            " Problem with: drive/MyDrive/data/2095.png\n",
            " Problem with: drive/MyDrive/data/2097.png\n",
            " Problem with: drive/MyDrive/data/2098.png\n",
            " Problem with: drive/MyDrive/data/2100.png\n",
            " Problem with: drive/MyDrive/data/2103.png\n",
            " Problem with: drive/MyDrive/data/2104.png\n",
            " Problem with: drive/MyDrive/data/2106.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 44%|████▍     | 2147/4861 [01:02<00:26, 100.65it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2109.png\n",
            " Problem with: drive/MyDrive/data/2110.png\n",
            " Problem with: drive/MyDrive/data/2114.png\n",
            " Problem with: drive/MyDrive/data/2115.png\n",
            " Problem with: drive/MyDrive/data/2116.png\n",
            " Problem with: drive/MyDrive/data/2118.png\n",
            " Problem with: drive/MyDrive/data/2119.png\n",
            " Problem with: drive/MyDrive/data/2121.png\n",
            " Problem with: drive/MyDrive/data/2122.png\n",
            " Problem with: drive/MyDrive/data/2123.png\n",
            " Problem with: drive/MyDrive/data/2124.png\n",
            " Problem with: drive/MyDrive/data/2125.png\n",
            " Problem with: drive/MyDrive/data/2127.png\n",
            " Problem with: drive/MyDrive/data/2128.png\n",
            " Problem with: drive/MyDrive/data/2129.png\n",
            " Problem with: drive/MyDrive/data/2131.png\n",
            " Problem with: drive/MyDrive/data/2132.png\n",
            " Problem with: drive/MyDrive/data/2133.png\n",
            " Problem with: drive/MyDrive/data/2134.png\n",
            " Problem with: drive/MyDrive/data/2136.png\n",
            " Problem with: drive/MyDrive/data/2137.png\n",
            " Problem with: drive/MyDrive/data/2138.png\n",
            " Problem with: drive/MyDrive/data/2139.png\n",
            " Problem with: drive/MyDrive/data/2145.png\n",
            " Problem with: drive/MyDrive/data/2146.png\n",
            " Problem with: drive/MyDrive/data/2150.png\n",
            " Problem with: drive/MyDrive/data/2152.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 45%|████▌     | 2189/4861 [01:03<00:33, 80.78it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2163.png\n",
            " Problem with: drive/MyDrive/data/2164.png\n",
            " Problem with: drive/MyDrive/data/2169.png\n",
            " Problem with: drive/MyDrive/data/2170.png\n",
            " Problem with: drive/MyDrive/data/2171.png\n",
            " Problem with: drive/MyDrive/data/2172.png\n",
            " Problem with: drive/MyDrive/data/2176.png\n",
            " Problem with: drive/MyDrive/data/2179.png\n",
            " Problem with: drive/MyDrive/data/2180.png\n",
            " Problem with: drive/MyDrive/data/2182.png\n",
            " Problem with: drive/MyDrive/data/2183.png\n",
            " Problem with: drive/MyDrive/data/2184.png\n",
            " Problem with: drive/MyDrive/data/2187.png\n",
            " Problem with: drive/MyDrive/data/2190.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 46%|████▌     | 2229/4861 [01:04<00:35, 74.25it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2198.png\n",
            " Problem with: drive/MyDrive/data/2200.png\n",
            " Problem with: drive/MyDrive/data/2202.png\n",
            " Problem with: drive/MyDrive/data/2203.png\n",
            " Problem with: drive/MyDrive/data/2204.png\n",
            " Problem with: drive/MyDrive/data/2206.png\n",
            " Problem with: drive/MyDrive/data/2208.png\n",
            " Problem with: drive/MyDrive/data/2209.png\n",
            " Problem with: drive/MyDrive/data/2211.png\n",
            " Problem with: drive/MyDrive/data/2214.png\n",
            " Problem with: drive/MyDrive/data/2217.png\n",
            " Problem with: drive/MyDrive/data/2220.png\n",
            " Problem with: drive/MyDrive/data/2221.png\n",
            " Problem with: drive/MyDrive/data/2222.png\n",
            " Problem with: drive/MyDrive/data/2225.png\n",
            " Problem with: drive/MyDrive/data/2227.png\n",
            " Problem with: drive/MyDrive/data/2231.png\n",
            " Problem with: drive/MyDrive/data/2232.png\n",
            " Problem with: drive/MyDrive/data/2234.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 47%|████▋     | 2265/4861 [01:05<00:49, 52.42it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2236.png\n",
            " Problem with: drive/MyDrive/data/2238.png\n",
            " Problem with: drive/MyDrive/data/2239.png\n",
            " Problem with: drive/MyDrive/data/2240.png\n",
            " Problem with: drive/MyDrive/data/2241.png\n",
            " Problem with: drive/MyDrive/data/2242.png\n",
            " Problem with: drive/MyDrive/data/2245.png\n",
            " Problem with: drive/MyDrive/data/2247.png\n",
            " Problem with: drive/MyDrive/data/2252.png\n",
            " Problem with: drive/MyDrive/data/2254.png\n",
            " Problem with: drive/MyDrive/data/2255.png\n",
            " Problem with: drive/MyDrive/data/2258.png\n",
            " Problem with: drive/MyDrive/data/2262.png\n",
            " Problem with: drive/MyDrive/data/2267.png\n",
            " Problem with: drive/MyDrive/data/2269.png\n",
            " Problem with: drive/MyDrive/data/2270.png\n",
            " Problem with: drive/MyDrive/data/2273.png\n",
            " Problem with: drive/MyDrive/data/2274.png\n",
            " Problem with: drive/MyDrive/data/2276.png\n",
            " Problem with: drive/MyDrive/data/2277.png\n",
            " Problem with: drive/MyDrive/data/2278.png\n",
            " Problem with: drive/MyDrive/data/2279.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 48%|████▊     | 2319/4861 [01:05<00:25, 98.49it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2282.png\n",
            " Problem with: drive/MyDrive/data/2283.png\n",
            " Problem with: drive/MyDrive/data/2286.png\n",
            " Problem with: drive/MyDrive/data/2287.png\n",
            " Problem with: drive/MyDrive/data/2288.png\n",
            " Problem with: drive/MyDrive/data/2289.png\n",
            " Problem with: drive/MyDrive/data/2290.png\n",
            " Problem with: drive/MyDrive/data/2291.png\n",
            " Problem with: drive/MyDrive/data/2292.png\n",
            " Problem with: drive/MyDrive/data/2293.png\n",
            " Problem with: drive/MyDrive/data/2294.png\n",
            " Problem with: drive/MyDrive/data/2296.png\n",
            " Problem with: drive/MyDrive/data/2297.png\n",
            " Problem with: drive/MyDrive/data/2298.png\n",
            " Problem with: drive/MyDrive/data/2299.png\n",
            " Problem with: drive/MyDrive/data/2302.png\n",
            " Problem with: drive/MyDrive/data/2303.png\n",
            " Problem with: drive/MyDrive/data/2304.png\n",
            " Problem with: drive/MyDrive/data/2305.png\n",
            " Problem with: drive/MyDrive/data/2306.png\n",
            " Problem with: drive/MyDrive/data/2310.png\n",
            " Problem with: drive/MyDrive/data/2313.png\n",
            " Problem with: drive/MyDrive/data/2316.png\n",
            " Problem with: drive/MyDrive/data/2317.png\n",
            " Problem with: drive/MyDrive/data/2318.png\n",
            " Problem with: drive/MyDrive/data/2321.png\n",
            " Problem with: drive/MyDrive/data/2324.png\n",
            " Problem with: drive/MyDrive/data/2325.png\n",
            " Problem with: drive/MyDrive/data/2326.png\n",
            " Problem with: drive/MyDrive/data/2327.png\n",
            " Problem with: drive/MyDrive/data/2328.png\n",
            " Problem with: drive/MyDrive/data/2331.png\n",
            " Problem with: drive/MyDrive/data/2332.png\n",
            " Problem with: drive/MyDrive/data/2334.png\n",
            " Problem with: drive/MyDrive/data/2336.png\n",
            " Problem with: drive/MyDrive/data/2337.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 48%|████▊     | 2347/4861 [01:05<00:19, 125.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2339.png\n",
            " Problem with: drive/MyDrive/data/2340.png\n",
            " Problem with: drive/MyDrive/data/2341.png\n",
            " Problem with: drive/MyDrive/data/2342.png\n",
            " Problem with: drive/MyDrive/data/2343.png\n",
            " Problem with: drive/MyDrive/data/2344.png\n",
            " Problem with: drive/MyDrive/data/2349.png\n",
            " Problem with: drive/MyDrive/data/2350.png\n",
            " Problem with: drive/MyDrive/data/2352.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 49%|████▉     | 2393/4861 [01:06<00:26, 93.23it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2355.png\n",
            " Problem with: drive/MyDrive/data/2358.png\n",
            " Problem with: drive/MyDrive/data/2359.png\n",
            " Problem with: drive/MyDrive/data/2361.png\n",
            " Problem with: drive/MyDrive/data/2362.png\n",
            " Problem with: drive/MyDrive/data/2363.png\n",
            " Problem with: drive/MyDrive/data/2364.png\n",
            " Problem with: drive/MyDrive/data/2367.png\n",
            " Problem with: drive/MyDrive/data/2368.png\n",
            " Problem with: drive/MyDrive/data/2369.png\n",
            " Problem with: drive/MyDrive/data/2371.png\n",
            " Problem with: drive/MyDrive/data/2372.png\n",
            " Problem with: drive/MyDrive/data/2377.png\n",
            " Problem with: drive/MyDrive/data/2383.png\n",
            " Problem with: drive/MyDrive/data/2384.png\n",
            " Problem with: drive/MyDrive/data/2387.png\n",
            " Problem with: drive/MyDrive/data/2388.png\n",
            " Problem with: drive/MyDrive/data/2391.png\n",
            " Problem with: drive/MyDrive/data/2392.png\n",
            " Problem with: drive/MyDrive/data/2393.png\n",
            " Problem with: drive/MyDrive/data/2397.png\n",
            " Problem with: drive/MyDrive/data/2398.png\n",
            " Problem with: drive/MyDrive/data/2399.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 50%|████▉     | 2415/4861 [01:06<00:21, 111.32it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2403.png\n",
            " Problem with: drive/MyDrive/data/2404.png\n",
            " Problem with: drive/MyDrive/data/2407.png\n",
            " Problem with: drive/MyDrive/data/2408.png\n",
            " Problem with: drive/MyDrive/data/2409.png\n",
            " Problem with: drive/MyDrive/data/2410.png\n",
            " Problem with: drive/MyDrive/data/2412.png\n",
            " Problem with: drive/MyDrive/data/2415.png\n",
            " Problem with: drive/MyDrive/data/2416.png\n",
            " Problem with: drive/MyDrive/data/2417.png\n",
            " Problem with: drive/MyDrive/data/2418.png\n",
            " Problem with: drive/MyDrive/data/2424.png\n",
            " Problem with: drive/MyDrive/data/2425.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 51%|█████     | 2467/4861 [01:07<00:23, 99.80it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2428.png\n",
            " Problem with: drive/MyDrive/data/2429.png\n",
            " Problem with: drive/MyDrive/data/2430.png\n",
            " Problem with: drive/MyDrive/data/2432.png\n",
            " Problem with: drive/MyDrive/data/2435.png\n",
            " Problem with: drive/MyDrive/data/2436.png\n",
            " Problem with: drive/MyDrive/data/2437.png\n",
            " Problem with: drive/MyDrive/data/2438.png\n",
            " Problem with: drive/MyDrive/data/2439.png\n",
            " Problem with: drive/MyDrive/data/2440.png\n",
            " Problem with: drive/MyDrive/data/2442.png\n",
            " Problem with: drive/MyDrive/data/2443.png\n",
            " Problem with: drive/MyDrive/data/2444.png\n",
            " Problem with: drive/MyDrive/data/2445.png\n",
            " Problem with: drive/MyDrive/data/2446.png\n",
            " Problem with: drive/MyDrive/data/2449.png\n",
            " Problem with: drive/MyDrive/data/2450.png\n",
            " Problem with: drive/MyDrive/data/2451.png\n",
            " Problem with: drive/MyDrive/data/2453.png\n",
            " Problem with: drive/MyDrive/data/2454.png\n",
            " Problem with: drive/MyDrive/data/2456.png\n",
            " Problem with: drive/MyDrive/data/2457.png\n",
            " Problem with: drive/MyDrive/data/2458.png\n",
            " Problem with: drive/MyDrive/data/2460.png\n",
            " Problem with: drive/MyDrive/data/2461.png\n",
            " Problem with: drive/MyDrive/data/2462.png\n",
            " Problem with: drive/MyDrive/data/2465.png\n",
            " Problem with: drive/MyDrive/data/2469.png\n",
            " Problem with: drive/MyDrive/data/2471.png\n",
            " Problem with: drive/MyDrive/data/2473.png\n",
            " Problem with: drive/MyDrive/data/2474.png\n",
            " Problem with: drive/MyDrive/data/2476.png\n",
            " Problem with: drive/MyDrive/data/2477.png\n",
            " Problem with: drive/MyDrive/data/2481.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 52%|█████▏    | 2508/4861 [01:07<00:18, 128.72it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2483.png\n",
            " Problem with: drive/MyDrive/data/2486.png\n",
            " Problem with: drive/MyDrive/data/2490.png\n",
            " Problem with: drive/MyDrive/data/2491.png\n",
            " Problem with: drive/MyDrive/data/2494.png\n",
            " Problem with: drive/MyDrive/data/2495.png\n",
            " Problem with: drive/MyDrive/data/2499.png\n",
            " Problem with: drive/MyDrive/data/2500.png\n",
            " Problem with: drive/MyDrive/data/2504.png\n",
            " Problem with: drive/MyDrive/data/2507.png\n",
            " Problem with: drive/MyDrive/data/2509.png\n",
            " Problem with: drive/MyDrive/data/2512.png\n",
            " Problem with: drive/MyDrive/data/2514.png\n",
            " Problem with: drive/MyDrive/data/2515.png\n",
            " Problem with: drive/MyDrive/data/2516.png\n",
            " Problem with: drive/MyDrive/data/2519.png\n",
            " Problem with: drive/MyDrive/data/2520.png\n",
            " Problem with: drive/MyDrive/data/2523.png\n",
            " Problem with: drive/MyDrive/data/2524.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 53%|█████▎    | 2554/4861 [01:07<00:14, 164.00it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2528.png\n",
            " Problem with: drive/MyDrive/data/2529.png\n",
            " Problem with: drive/MyDrive/data/2533.png\n",
            " Problem with: drive/MyDrive/data/2537.png\n",
            " Problem with: drive/MyDrive/data/2540.png\n",
            " Problem with: drive/MyDrive/data/2541.png\n",
            " Problem with: drive/MyDrive/data/2545.png\n",
            " Problem with: drive/MyDrive/data/2546.png\n",
            " Problem with: drive/MyDrive/data/2547.png\n",
            " Problem with: drive/MyDrive/data/2551.png\n",
            " Problem with: drive/MyDrive/data/2552.png\n",
            " Problem with: drive/MyDrive/data/2553.png\n",
            " Problem with: drive/MyDrive/data/2555.png\n",
            " Problem with: drive/MyDrive/data/2556.png\n",
            " Problem with: drive/MyDrive/data/2557.png\n",
            " Problem with: drive/MyDrive/data/2562.png\n",
            " Problem with: drive/MyDrive/data/2563.png\n",
            " Problem with: drive/MyDrive/data/2564.png\n",
            " Problem with: drive/MyDrive/data/2565.png\n",
            " Problem with: drive/MyDrive/data/2567.png\n",
            " Problem with: drive/MyDrive/data/2568.png\n",
            " Problem with: drive/MyDrive/data/2570.png\n",
            " Problem with: drive/MyDrive/data/2572.png\n",
            " Problem with: drive/MyDrive/data/2573.png\n",
            " Problem with: drive/MyDrive/data/2574.png\n",
            " Problem with: drive/MyDrive/data/2576.png\n",
            " Problem with: drive/MyDrive/data/2577.png\n",
            " Problem with: drive/MyDrive/data/2578.png\n",
            " Problem with: drive/MyDrive/data/2580.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 53%|█████▎    | 2583/4861 [01:08<00:25, 90.61it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2584.png\n",
            " Problem with: drive/MyDrive/data/2585.png\n",
            " Problem with: drive/MyDrive/data/2589.png\n",
            " Problem with: drive/MyDrive/data/2590.png\n",
            " Problem with: drive/MyDrive/data/2591.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 54%|█████▍    | 2625/4861 [01:08<00:26, 82.93it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2601.png\n",
            " Problem with: drive/MyDrive/data/2603.png\n",
            " Problem with: drive/MyDrive/data/2604.png\n",
            " Problem with: drive/MyDrive/data/2606.png\n",
            " Problem with: drive/MyDrive/data/2607.png\n",
            " Problem with: drive/MyDrive/data/2608.png\n",
            " Problem with: drive/MyDrive/data/2614.png\n",
            " Problem with: drive/MyDrive/data/2616.png\n",
            " Problem with: drive/MyDrive/data/2617.png\n",
            " Problem with: drive/MyDrive/data/2618.png\n",
            " Problem with: drive/MyDrive/data/2619.png\n",
            " Problem with: drive/MyDrive/data/2620.png\n",
            " Problem with: drive/MyDrive/data/2625.png\n",
            " Problem with: drive/MyDrive/data/2626.png\n",
            " Problem with: drive/MyDrive/data/2627.png\n",
            " Problem with: drive/MyDrive/data/2628.png\n",
            " Problem with: drive/MyDrive/data/2629.png\n",
            " Problem with: drive/MyDrive/data/2630.png\n",
            " Problem with: drive/MyDrive/data/2631.png\n",
            " Problem with: drive/MyDrive/data/2632.png\n",
            " Problem with: drive/MyDrive/data/2633.png\n",
            " Problem with: drive/MyDrive/data/2634.png\n",
            " Problem with: drive/MyDrive/data/2636.png\n",
            " Problem with: drive/MyDrive/data/2637.png\n",
            " Problem with: drive/MyDrive/data/2639.png\n",
            " Problem with: drive/MyDrive/data/2640.png\n",
            " Problem with: drive/MyDrive/data/2644.png\n",
            " Problem with: drive/MyDrive/data/2645.png\n",
            " Problem with: drive/MyDrive/data/2647.png\n",
            " Problem with: drive/MyDrive/data/2648.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 55%|█████▌    | 2678/4861 [01:08<00:16, 129.17it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2655.png\n",
            " Problem with: drive/MyDrive/data/2656.png\n",
            " Problem with: drive/MyDrive/data/2659.png\n",
            " Problem with: drive/MyDrive/data/2660.png\n",
            " Problem with: drive/MyDrive/data/2661.png\n",
            " Problem with: drive/MyDrive/data/2665.png\n",
            " Problem with: drive/MyDrive/data/2669.png\n",
            " Problem with: drive/MyDrive/data/2670.png\n",
            " Problem with: drive/MyDrive/data/2671.png\n",
            " Problem with: drive/MyDrive/data/2672.png\n",
            " Problem with: drive/MyDrive/data/2675.png\n",
            " Problem with: drive/MyDrive/data/2677.png\n",
            " Problem with: drive/MyDrive/data/2679.png\n",
            " Problem with: drive/MyDrive/data/2681.png\n",
            " Problem with: drive/MyDrive/data/2682.png\n",
            " Problem with: drive/MyDrive/data/2687.png\n",
            " Problem with: drive/MyDrive/data/2689.png\n",
            " Problem with: drive/MyDrive/data/2690.png\n",
            " Problem with: drive/MyDrive/data/2691.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 56%|█████▌    | 2716/4861 [01:10<00:34, 62.45it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2695.png\n",
            " Problem with: drive/MyDrive/data/2698.png\n",
            " Problem with: drive/MyDrive/data/2699.png\n",
            " Problem with: drive/MyDrive/data/2701.png\n",
            " Problem with: drive/MyDrive/data/2703.png\n",
            " Problem with: drive/MyDrive/data/2705.png\n",
            " Problem with: drive/MyDrive/data/2710.png\n",
            " Problem with: drive/MyDrive/data/2715.png\n",
            " Problem with: drive/MyDrive/data/2717.png\n",
            " Problem with: drive/MyDrive/data/2720.png\n",
            " Problem with: drive/MyDrive/data/2721.png\n",
            " Problem with: drive/MyDrive/data/2722.png\n",
            " Problem with: drive/MyDrive/data/2724.png\n",
            " Problem with: drive/MyDrive/data/2725.png\n",
            " Problem with: drive/MyDrive/data/2731.png\n",
            " Problem with: drive/MyDrive/data/2732.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 56%|█████▋    | 2736/4861 [01:10<00:27, 77.46it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2735.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 57%|█████▋    | 2753/4861 [01:10<00:39, 53.01it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2740.png\n",
            " Problem with: drive/MyDrive/data/2742.png\n",
            " Problem with: drive/MyDrive/data/2744.png\n",
            " Problem with: drive/MyDrive/data/2747.png\n",
            " Problem with: drive/MyDrive/data/2748.png\n",
            " Problem with: drive/MyDrive/data/2752.png\n",
            " Problem with: drive/MyDrive/data/2758.png\n",
            " Problem with: drive/MyDrive/data/2759.png\n",
            " Problem with: drive/MyDrive/data/2760.png\n",
            " Problem with: drive/MyDrive/data/2764.png\n",
            " Problem with: drive/MyDrive/data/2765.png\n",
            " Problem with: drive/MyDrive/data/2768.png\n",
            " Problem with: drive/MyDrive/data/2769.png\n",
            " Problem with: drive/MyDrive/data/2771.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 58%|█████▊    | 2818/4861 [01:11<00:25, 80.64it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2775.png\n",
            " Problem with: drive/MyDrive/data/2776.png\n",
            " Problem with: drive/MyDrive/data/2777.png\n",
            " Problem with: drive/MyDrive/data/2778.png\n",
            " Problem with: drive/MyDrive/data/2779.png\n",
            " Problem with: drive/MyDrive/data/2780.png\n",
            " Problem with: drive/MyDrive/data/2781.png\n",
            " Problem with: drive/MyDrive/data/2787.png\n",
            " Problem with: drive/MyDrive/data/2788.png\n",
            " Problem with: drive/MyDrive/data/2791.png\n",
            " Problem with: drive/MyDrive/data/2794.png\n",
            " Problem with: drive/MyDrive/data/2795.png\n",
            " Problem with: drive/MyDrive/data/2796.png\n",
            " Problem with: drive/MyDrive/data/2799.png\n",
            " Problem with: drive/MyDrive/data/2801.png\n",
            " Problem with: drive/MyDrive/data/2807.png\n",
            " Problem with: drive/MyDrive/data/2808.png\n",
            " Problem with: drive/MyDrive/data/2809.png\n",
            " Problem with: drive/MyDrive/data/2810.png\n",
            " Problem with: drive/MyDrive/data/2813.png\n",
            " Problem with: drive/MyDrive/data/2814.png\n",
            " Problem with: drive/MyDrive/data/2815.png\n",
            " Problem with: drive/MyDrive/data/2817.png\n",
            " Problem with: drive/MyDrive/data/2819.png\n",
            " Problem with: drive/MyDrive/data/2820.png\n",
            " Problem with: drive/MyDrive/data/2821.png\n",
            " Problem with: drive/MyDrive/data/2822.png\n",
            " Problem with: drive/MyDrive/data/2824.png\n",
            " Problem with: drive/MyDrive/data/2826.png\n",
            " Problem with: drive/MyDrive/data/2827.png\n",
            " Problem with: drive/MyDrive/data/2828.png\n",
            " Problem with: drive/MyDrive/data/2829.png\n",
            " Problem with: drive/MyDrive/data/2830.png\n",
            " Problem with: drive/MyDrive/data/2832.png\n",
            " Problem with: drive/MyDrive/data/2833.png\n",
            " Problem with: drive/MyDrive/data/2835.png\n",
            " Problem with: drive/MyDrive/data/2838.png\n",
            " Problem with: drive/MyDrive/data/2839.png\n",
            " Problem with: drive/MyDrive/data/2841.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 59%|█████▉    | 2866/4861 [01:12<00:24, 81.18it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2844.png\n",
            " Problem with: drive/MyDrive/data/2846.png\n",
            " Problem with: drive/MyDrive/data/2847.png\n",
            " Problem with: drive/MyDrive/data/2848.png\n",
            " Problem with: drive/MyDrive/data/2849.png\n",
            " Problem with: drive/MyDrive/data/2850.png\n",
            " Problem with: drive/MyDrive/data/2853.png\n",
            " Problem with: drive/MyDrive/data/2856.png\n",
            " Problem with: drive/MyDrive/data/2857.png\n",
            " Problem with: drive/MyDrive/data/2858.png\n",
            " Problem with: drive/MyDrive/data/2859.png\n",
            " Problem with: drive/MyDrive/data/2870.png\n",
            " Problem with: drive/MyDrive/data/2871.png\n",
            " Problem with: drive/MyDrive/data/2872.png\n",
            " Problem with: drive/MyDrive/data/2875.png\n",
            " Problem with: drive/MyDrive/data/2878.png\n",
            " Problem with: drive/MyDrive/data/2881.png\n",
            " Problem with: drive/MyDrive/data/2885.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 59%|█████▉    | 2886/4861 [01:12<00:20, 96.39it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2887.png\n",
            " Problem with: drive/MyDrive/data/2890.png\n",
            " Problem with: drive/MyDrive/data/2892.png\n",
            " Problem with: drive/MyDrive/data/2893.png\n",
            " Problem with: drive/MyDrive/data/2899.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 60%|█████▉    | 2903/4861 [01:12<00:31, 62.15it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2901.png\n",
            " Problem with: drive/MyDrive/data/2902.png\n",
            " Problem with: drive/MyDrive/data/2903.png\n",
            " Problem with: drive/MyDrive/data/2904.png\n",
            " Problem with: drive/MyDrive/data/2906.png\n",
            " Problem with: drive/MyDrive/data/2907.png\n",
            " Problem with: drive/MyDrive/data/2908.png\n",
            " Problem with: drive/MyDrive/data/2911.png\n",
            " Problem with: drive/MyDrive/data/2913.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 60%|█████▉    | 2916/4861 [01:13<00:44, 43.55it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2916.png\n",
            " Problem with: drive/MyDrive/data/2917.png\n",
            " Problem with: drive/MyDrive/data/2918.png\n",
            " Problem with: drive/MyDrive/data/2919.png\n",
            " Problem with: drive/MyDrive/data/2920.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 60%|██████    | 2926/4861 [01:14<00:55, 34.80it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2923.png\n",
            " Problem with: drive/MyDrive/data/2924.png\n",
            " Problem with: drive/MyDrive/data/2926.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 61%|██████    | 2954/4861 [01:14<00:43, 43.44it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2928.png\n",
            " Problem with: drive/MyDrive/data/2929.png\n",
            " Problem with: drive/MyDrive/data/2931.png\n",
            " Problem with: drive/MyDrive/data/2932.png\n",
            " Problem with: drive/MyDrive/data/2933.png\n",
            " Problem with: drive/MyDrive/data/2934.png\n",
            " Problem with: drive/MyDrive/data/2935.png\n",
            " Problem with: drive/MyDrive/data/2938.png\n",
            " Problem with: drive/MyDrive/data/2940.png\n",
            " Problem with: drive/MyDrive/data/2941.png\n",
            " Problem with: drive/MyDrive/data/2945.png\n",
            " Problem with: drive/MyDrive/data/2946.png\n",
            " Problem with: drive/MyDrive/data/2953.png\n",
            " Problem with: drive/MyDrive/data/2957.png\n",
            " Problem with: drive/MyDrive/data/2960.png\n",
            " Problem with: drive/MyDrive/data/2962.png\n",
            " Problem with: drive/MyDrive/data/2964.png\n",
            " Problem with: drive/MyDrive/data/2967.png\n",
            " Problem with: drive/MyDrive/data/2968.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 62%|██████▏   | 3021/4861 [01:14<00:16, 113.27it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/2976.png\n",
            " Problem with: drive/MyDrive/data/2977.png\n",
            " Problem with: drive/MyDrive/data/2982.png\n",
            " Problem with: drive/MyDrive/data/2985.png\n",
            " Problem with: drive/MyDrive/data/2987.png\n",
            " Problem with: drive/MyDrive/data/2988.png\n",
            " Problem with: drive/MyDrive/data/2989.png\n",
            " Problem with: drive/MyDrive/data/2992.png\n",
            " Problem with: drive/MyDrive/data/2993.png\n",
            " Problem with: drive/MyDrive/data/2994.png\n",
            " Problem with: drive/MyDrive/data/2996.png\n",
            " Problem with: drive/MyDrive/data/2997.png\n",
            " Problem with: drive/MyDrive/data/2998.png\n",
            " Problem with: drive/MyDrive/data/3003.png\n",
            " Problem with: drive/MyDrive/data/3004.png\n",
            " Problem with: drive/MyDrive/data/3005.png\n",
            " Problem with: drive/MyDrive/data/3007.png\n",
            " Problem with: drive/MyDrive/data/3008.png\n",
            " Problem with: drive/MyDrive/data/3009.png\n",
            " Problem with: drive/MyDrive/data/3011.png\n",
            " Problem with: drive/MyDrive/data/3012.png\n",
            " Problem with: drive/MyDrive/data/3013.png\n",
            " Problem with: drive/MyDrive/data/3014.png\n",
            " Problem with: drive/MyDrive/data/3015.png\n",
            " Problem with: drive/MyDrive/data/3017.png\n",
            " Problem with: drive/MyDrive/data/3018.png\n",
            " Problem with: drive/MyDrive/data/3019.png\n",
            " Problem with: drive/MyDrive/data/3020.png\n",
            " Problem with: drive/MyDrive/data/3026.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 63%|██████▎   | 3060/4861 [01:15<00:21, 84.33it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3033.png\n",
            " Problem with: drive/MyDrive/data/3034.png\n",
            " Problem with: drive/MyDrive/data/3035.png\n",
            " Problem with: drive/MyDrive/data/3036.png\n",
            " Problem with: drive/MyDrive/data/3039.png\n",
            " Problem with: drive/MyDrive/data/3040.png\n",
            " Problem with: drive/MyDrive/data/3042.png\n",
            " Problem with: drive/MyDrive/data/3045.png\n",
            " Problem with: drive/MyDrive/data/3048.png\n",
            " Problem with: drive/MyDrive/data/3053.png\n",
            " Problem with: drive/MyDrive/data/3055.png\n",
            " Problem with: drive/MyDrive/data/3057.png\n",
            " Problem with: drive/MyDrive/data/3061.png\n",
            " Problem with: drive/MyDrive/data/3062.png\n",
            " Problem with: drive/MyDrive/data/3063.png\n",
            " Problem with: drive/MyDrive/data/3067.png\n",
            " Problem with: drive/MyDrive/data/3068.png\n",
            " Problem with: drive/MyDrive/data/3070.png\n",
            " Problem with: drive/MyDrive/data/3072.png\n",
            " Problem with: drive/MyDrive/data/3073.png\n",
            " Problem with: drive/MyDrive/data/3075.png\n",
            " Problem with: drive/MyDrive/data/3076.png\n",
            " Problem with: drive/MyDrive/data/3077.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 64%|██████▍   | 3117/4861 [01:15<00:11, 145.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3081.png\n",
            " Problem with: drive/MyDrive/data/3083.png\n",
            " Problem with: drive/MyDrive/data/3085.png\n",
            " Problem with: drive/MyDrive/data/3087.png\n",
            " Problem with: drive/MyDrive/data/3089.png\n",
            " Problem with: drive/MyDrive/data/3090.png\n",
            " Problem with: drive/MyDrive/data/3091.png\n",
            " Problem with: drive/MyDrive/data/3092.png\n",
            " Problem with: drive/MyDrive/data/3093.png\n",
            " Problem with: drive/MyDrive/data/3094.png\n",
            " Problem with: drive/MyDrive/data/3095.png\n",
            " Problem with: drive/MyDrive/data/3096.png\n",
            " Problem with: drive/MyDrive/data/3097.png\n",
            " Problem with: drive/MyDrive/data/3098.png\n",
            " Problem with: drive/MyDrive/data/3099.png\n",
            " Problem with: drive/MyDrive/data/3100.png\n",
            " Problem with: drive/MyDrive/data/3101.png\n",
            " Problem with: drive/MyDrive/data/3102.png\n",
            " Problem with: drive/MyDrive/data/3105.png\n",
            " Problem with: drive/MyDrive/data/3108.png\n",
            " Problem with: drive/MyDrive/data/3109.png\n",
            " Problem with: drive/MyDrive/data/3113.png\n",
            " Problem with: drive/MyDrive/data/3115.png\n",
            " Problem with: drive/MyDrive/data/3116.png\n",
            " Problem with: drive/MyDrive/data/3119.png\n",
            " Problem with: drive/MyDrive/data/3120.png\n",
            " Problem with: drive/MyDrive/data/3122.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 65%|██████▍   | 3158/4861 [01:16<00:18, 90.73it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3130.png\n",
            " Problem with: drive/MyDrive/data/3133.png\n",
            " Problem with: drive/MyDrive/data/3134.png\n",
            " Problem with: drive/MyDrive/data/3135.png\n",
            " Problem with: drive/MyDrive/data/3139.png\n",
            " Problem with: drive/MyDrive/data/3142.png\n",
            " Problem with: drive/MyDrive/data/3147.png\n",
            " Problem with: drive/MyDrive/data/3153.png\n",
            " Problem with: drive/MyDrive/data/3154.png\n",
            " Problem with: drive/MyDrive/data/3157.png\n",
            " Problem with: drive/MyDrive/data/3158.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 66%|██████▌   | 3197/4861 [01:16<00:13, 121.17it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3167.png\n",
            " Problem with: drive/MyDrive/data/3170.png\n",
            " Problem with: drive/MyDrive/data/3172.png\n",
            " Problem with: drive/MyDrive/data/3173.png\n",
            " Problem with: drive/MyDrive/data/3175.png\n",
            " Problem with: drive/MyDrive/data/3181.png\n",
            " Problem with: drive/MyDrive/data/3184.png\n",
            " Problem with: drive/MyDrive/data/3188.png\n",
            " Problem with: drive/MyDrive/data/3189.png\n",
            " Problem with: drive/MyDrive/data/3192.png\n",
            " Problem with: drive/MyDrive/data/3194.png\n",
            " Problem with: drive/MyDrive/data/3197.png\n",
            " Problem with: drive/MyDrive/data/3200.png\n",
            " Problem with: drive/MyDrive/data/3202.png\n",
            " Problem with: drive/MyDrive/data/3205.png\n",
            " Problem with: drive/MyDrive/data/3206.png\n",
            " Problem with: drive/MyDrive/data/3208.png\n",
            " Problem with: drive/MyDrive/data/3209.png"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 67%|██████▋   | 3251/4861 [01:16<00:08, 179.29it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Problem with: drive/MyDrive/data/3211.png\n",
            " Problem with: drive/MyDrive/data/3212.png\n",
            " Problem with: drive/MyDrive/data/3213.png\n",
            " Problem with: drive/MyDrive/data/3214.png\n",
            " Problem with: drive/MyDrive/data/3220.png\n",
            " Problem with: drive/MyDrive/data/3221.png\n",
            " Problem with: drive/MyDrive/data/3222.png\n",
            " Problem with: drive/MyDrive/data/3223.png\n",
            " Problem with: drive/MyDrive/data/3224.png\n",
            " Problem with: drive/MyDrive/data/3225.png\n",
            " Problem with: drive/MyDrive/data/3227.png\n",
            " Problem with: drive/MyDrive/data/3229.png\n",
            " Problem with: drive/MyDrive/data/3230.png\n",
            " Problem with: drive/MyDrive/data/3231.png\n",
            " Problem with: drive/MyDrive/data/3233.png\n",
            " Problem with: drive/MyDrive/data/3234.png\n",
            " Problem with: drive/MyDrive/data/3236.png\n",
            " Problem with: drive/MyDrive/data/3237.png\n",
            " Problem with: drive/MyDrive/data/3239.png\n",
            " Problem with: drive/MyDrive/data/3242.png\n",
            " Problem with: drive/MyDrive/data/3244.png\n",
            " Problem with: drive/MyDrive/data/3246.png\n",
            " Problem with: drive/MyDrive/data/3247.png\n",
            " Problem with: drive/MyDrive/data/3248.png\n",
            " Problem with: drive/MyDrive/data/3249.png\n",
            " Problem with: drive/MyDrive/data/3250.png\n",
            " Problem with: drive/MyDrive/data/3252.png\n",
            " Problem with: drive/MyDrive/data/3254.png\n",
            " Problem with: drive/MyDrive/data/3255.png\n",
            " Problem with: drive/MyDrive/data/3256.png\n",
            " Problem with: drive/MyDrive/data/3257.png\n",
            " Problem with: drive/MyDrive/data/3261.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 68%|██████▊   | 3297/4861 [01:17<00:08, 189.75it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3265.png\n",
            " Problem with: drive/MyDrive/data/3266.png\n",
            " Problem with: drive/MyDrive/data/3269.png\n",
            " Problem with: drive/MyDrive/data/3270.png\n",
            " Problem with: drive/MyDrive/data/3274.png\n",
            " Problem with: drive/MyDrive/data/3275.png\n",
            " Problem with: drive/MyDrive/data/3276.png\n",
            " Problem with: drive/MyDrive/data/3277.png\n",
            " Problem with: drive/MyDrive/data/3280.png\n",
            " Problem with: drive/MyDrive/data/3284.png\n",
            " Problem with: drive/MyDrive/data/3288.png\n",
            " Problem with: drive/MyDrive/data/3292.png\n",
            " Problem with: drive/MyDrive/data/3293.png\n",
            " Problem with: drive/MyDrive/data/3294.png\n",
            " Problem with: drive/MyDrive/data/3295.png\n",
            " Problem with: drive/MyDrive/data/3300.png\n",
            " Problem with: drive/MyDrive/data/3301.png\n",
            " Problem with: drive/MyDrive/data/3302.png\n",
            " Problem with: drive/MyDrive/data/3303.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 68%|██████▊   | 3323/4861 [01:17<00:07, 207.17it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3308.png\n",
            " Problem with: drive/MyDrive/data/3310.png\n",
            " Problem with: drive/MyDrive/data/3312.png\n",
            " Problem with: drive/MyDrive/data/3315.png\n",
            " Problem with: drive/MyDrive/data/3316.png\n",
            " Problem with: drive/MyDrive/data/3318.png\n",
            " Problem with: drive/MyDrive/data/3319.png\n",
            " Problem with: drive/MyDrive/data/3320.png\n",
            " Problem with: drive/MyDrive/data/3321.png\n",
            " Problem with: drive/MyDrive/data/3322.png\n",
            " Problem with: drive/MyDrive/data/3325.png\n",
            " Problem with: drive/MyDrive/data/3327.png\n",
            " Problem with: drive/MyDrive/data/3330.png\n",
            " Problem with: drive/MyDrive/data/3331.png\n",
            " Problem with: drive/MyDrive/data/3332.png\n",
            " Problem with: drive/MyDrive/data/3333.png\n",
            " Problem with: drive/MyDrive/data/3335.png\n",
            " Problem with: drive/MyDrive/data/3336.png\n",
            " Problem with: drive/MyDrive/data/3337.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 69%|██████▉   | 3364/4861 [01:18<00:21, 68.95it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3340.png\n",
            " Problem with: drive/MyDrive/data/3341.png\n",
            " Problem with: drive/MyDrive/data/3344.png\n",
            " Problem with: drive/MyDrive/data/3347.png\n",
            " Problem with: drive/MyDrive/data/3353.png\n",
            " Problem with: drive/MyDrive/data/3354.png\n",
            " Problem with: drive/MyDrive/data/3355.png\n",
            " Problem with: drive/MyDrive/data/3365.png\n",
            " Problem with: drive/MyDrive/data/3367.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 70%|██████▉   | 3401/4861 [01:19<00:22, 64.32it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3373.png\n",
            " Problem with: drive/MyDrive/data/3374.png\n",
            " Problem with: drive/MyDrive/data/3375.png\n",
            " Problem with: drive/MyDrive/data/3377.png\n",
            " Problem with: drive/MyDrive/data/3379.png\n",
            " Problem with: drive/MyDrive/data/3380.png\n",
            " Problem with: drive/MyDrive/data/3381.png\n",
            " Problem with: drive/MyDrive/data/3384.png\n",
            " Problem with: drive/MyDrive/data/3389.png\n",
            " Problem with: drive/MyDrive/data/3390.png\n",
            " Problem with: drive/MyDrive/data/3392.png\n",
            " Problem with: drive/MyDrive/data/3393.png\n",
            " Problem with: drive/MyDrive/data/3396.png\n",
            " Problem with: drive/MyDrive/data/3397.png\n",
            " Problem with: drive/MyDrive/data/3398.png\n",
            " Problem with: drive/MyDrive/data/3399.png\n",
            " Problem with: drive/MyDrive/data/3405.png\n",
            " Problem with: drive/MyDrive/data/3409.png\n",
            " Problem with: drive/MyDrive/data/3410.png\n",
            " Problem with: drive/MyDrive/data/3411.png\n",
            " Problem with: drive/MyDrive/data/3412.png\n",
            " Problem with: drive/MyDrive/data/3415.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 70%|███████   | 3418/4861 [01:19<00:18, 76.37it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3422.png\n",
            " Problem with: drive/MyDrive/data/3424.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 71%|███████   | 3434/4861 [01:20<00:38, 36.97it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3426.png\n",
            " Problem with: drive/MyDrive/data/3429.png\n",
            " Problem with: drive/MyDrive/data/3430.png\n",
            " Problem with: drive/MyDrive/data/3431.png\n",
            " Problem with: drive/MyDrive/data/3433.png\n",
            " Problem with: drive/MyDrive/data/3435.png\n",
            " Problem with: drive/MyDrive/data/3436.png\n",
            " Problem with: drive/MyDrive/data/3438.png\n",
            " Problem with: drive/MyDrive/data/3439.png\n",
            " Problem with: drive/MyDrive/data/3440.png\n",
            " Problem with: drive/MyDrive/data/3441.png\n",
            " Problem with: drive/MyDrive/data/3442.png\n",
            " Problem with: drive/MyDrive/data/3444.png\n",
            " Problem with: drive/MyDrive/data/3446.png\n",
            " Problem with: drive/MyDrive/data/3448.png\n",
            " Problem with: drive/MyDrive/data/3449.png\n",
            " Problem with: drive/MyDrive/data/3451.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 71%|███████   | 3453/4861 [01:21<00:40, 34.59it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3454.png\n",
            " Problem with: drive/MyDrive/data/3456.png\n",
            " Problem with: drive/MyDrive/data/3459.png\n",
            " Problem with: drive/MyDrive/data/3460.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 71%|███████   | 3462/4861 [01:21<00:46, 30.10it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3462.png\n",
            " Problem with: drive/MyDrive/data/3463.png\n",
            " Problem with: drive/MyDrive/data/3464.png\n",
            " Problem with: drive/MyDrive/data/3469.png\n",
            " Problem with: drive/MyDrive/data/3470.png\n",
            " Problem with: drive/MyDrive/data/3475.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 72%|███████▏  | 3476/4861 [01:22<00:48, 28.49it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3480.png\n",
            " Problem with: drive/MyDrive/data/3481.png\n",
            " Problem with: drive/MyDrive/data/3482.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 72%|███████▏  | 3504/4861 [01:22<00:36, 37.65it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3485.png\n",
            " Problem with: drive/MyDrive/data/3489.png\n",
            " Problem with: drive/MyDrive/data/3490.png\n",
            " Problem with: drive/MyDrive/data/3499.png\n",
            " Problem with: drive/MyDrive/data/3500.png\n",
            " Problem with: drive/MyDrive/data/3502.png\n",
            " Problem with: drive/MyDrive/data/3503.png\n",
            " Problem with: drive/MyDrive/data/3505.png\n",
            " Problem with: drive/MyDrive/data/3507.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 73%|███████▎  | 3537/4861 [01:23<00:27, 48.08it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3509.png\n",
            " Problem with: drive/MyDrive/data/3510.png\n",
            " Problem with: drive/MyDrive/data/3515.png\n",
            " Problem with: drive/MyDrive/data/3516.png\n",
            " Problem with: drive/MyDrive/data/3517.png\n",
            " Problem with: drive/MyDrive/data/3519.png\n",
            " Problem with: drive/MyDrive/data/3520.png\n",
            " Problem with: drive/MyDrive/data/3524.png\n",
            " Problem with: drive/MyDrive/data/3525.png\n",
            " Problem with: drive/MyDrive/data/3526.png\n",
            " Problem with: drive/MyDrive/data/3528.png\n",
            " Problem with: drive/MyDrive/data/3532.png\n",
            " Problem with: drive/MyDrive/data/3533.png\n",
            " Problem with: drive/MyDrive/data/3534.png\n",
            " Problem with: drive/MyDrive/data/3538.png\n",
            " Problem with: drive/MyDrive/data/3539.png\n",
            " Problem with: drive/MyDrive/data/3540.png\n",
            " Problem with: drive/MyDrive/data/3541.png\n",
            " Problem with: drive/MyDrive/data/3542.png\n",
            " Problem with: drive/MyDrive/data/3543.png\n",
            " Problem with: drive/MyDrive/data/3544.png\n",
            " Problem with: drive/MyDrive/data/3546.png\n",
            " Problem with: drive/MyDrive/data/3547.png\n",
            " Problem with: drive/MyDrive/data/3548.png\n",
            " Problem with: drive/MyDrive/data/3554.png\n",
            " Problem with: drive/MyDrive/data/3555.png\n",
            " Problem with: drive/MyDrive/data/3556.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 73%|███████▎  | 3561/4861 [01:23<00:18, 69.05it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3565.png\n",
            " Problem with: drive/MyDrive/data/3566.png\n",
            " Problem with: drive/MyDrive/data/3567.png\n",
            " Problem with: drive/MyDrive/data/3572.png\n",
            " Problem with: drive/MyDrive/data/3575.png\n",
            " Problem with: drive/MyDrive/data/3576.png\n",
            " Problem with: drive/MyDrive/data/3577.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 74%|███████▎  | 3579/4861 [01:24<00:24, 52.08it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3580.png\n",
            " Problem with: drive/MyDrive/data/3581.png\n",
            " Problem with: drive/MyDrive/data/3583.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 74%|███████▍  | 3616/4861 [01:24<00:20, 60.48it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3585.png\n",
            " Problem with: drive/MyDrive/data/3587.png\n",
            " Problem with: drive/MyDrive/data/3588.png\n",
            " Problem with: drive/MyDrive/data/3589.png\n",
            " Problem with: drive/MyDrive/data/3590.png\n",
            " Problem with: drive/MyDrive/data/3592.png\n",
            " Problem with: drive/MyDrive/data/3593.png\n",
            " Problem with: drive/MyDrive/data/3596.png\n",
            " Problem with: drive/MyDrive/data/3598.png\n",
            " Problem with: drive/MyDrive/data/3599.png\n",
            " Problem with: drive/MyDrive/data/3602.png\n",
            " Problem with: drive/MyDrive/data/3605.png\n",
            " Problem with: drive/MyDrive/data/3606.png\n",
            " Problem with: drive/MyDrive/data/3608.png\n",
            " Problem with: drive/MyDrive/data/3613.png\n",
            " Problem with: drive/MyDrive/data/3614.png\n",
            " Problem with: drive/MyDrive/data/3615.png\n",
            " Problem with: drive/MyDrive/data/3617.png\n",
            " Problem with: drive/MyDrive/data/3619.png\n",
            " Problem with: drive/MyDrive/data/3621.png\n",
            " Problem with: drive/MyDrive/data/3622.png\n",
            " Problem with: drive/MyDrive/data/3623.png\n",
            " Problem with: drive/MyDrive/data/3625.png\n",
            " Problem with: drive/MyDrive/data/3628.png\n",
            " Problem with: drive/MyDrive/data/3629.png\n",
            " Problem with: drive/MyDrive/data/3631.png\n",
            " Problem with: drive/MyDrive/data/3633.png\n",
            " Problem with: drive/MyDrive/data/3636.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 76%|███████▌  | 3687/4861 [01:25<00:12, 91.90it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3639.png\n",
            " Problem with: drive/MyDrive/data/3643.png\n",
            " Problem with: drive/MyDrive/data/3645.png\n",
            " Problem with: drive/MyDrive/data/3646.png\n",
            " Problem with: drive/MyDrive/data/3647.png\n",
            " Problem with: drive/MyDrive/data/3649.png\n",
            " Problem with: drive/MyDrive/data/3650.png\n",
            " Problem with: drive/MyDrive/data/3654.png\n",
            " Problem with: drive/MyDrive/data/3655.png\n",
            " Problem with: drive/MyDrive/data/3656.png\n",
            " Problem with: drive/MyDrive/data/3658.png\n",
            " Problem with: drive/MyDrive/data/3659.png\n",
            " Problem with: drive/MyDrive/data/3660.png\n",
            " Problem with: drive/MyDrive/data/3664.png\n",
            " Problem with: drive/MyDrive/data/3666.png\n",
            " Problem with: drive/MyDrive/data/3669.png\n",
            " Problem with: drive/MyDrive/data/3671.png\n",
            " Problem with: drive/MyDrive/data/3672.png\n",
            " Problem with: drive/MyDrive/data/3675.png\n",
            " Problem with: drive/MyDrive/data/3676.png\n",
            " Problem with: drive/MyDrive/data/3677.png\n",
            " Problem with: drive/MyDrive/data/3680.png\n",
            " Problem with: drive/MyDrive/data/3681.png\n",
            " Problem with: drive/MyDrive/data/3682.png\n",
            " Problem with: drive/MyDrive/data/3683.png\n",
            " Problem with: drive/MyDrive/data/3685.png\n",
            " Problem with: drive/MyDrive/data/3686.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 77%|███████▋  | 3731/4861 [01:25<00:08, 129.50it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3692.png\n",
            " Problem with: drive/MyDrive/data/3694.png\n",
            " Problem with: drive/MyDrive/data/3698.png\n",
            " Problem with: drive/MyDrive/data/3699.png\n",
            " Problem with: drive/MyDrive/data/3701.png\n",
            " Problem with: drive/MyDrive/data/3703.png\n",
            " Problem with: drive/MyDrive/data/3707.png\n",
            " Problem with: drive/MyDrive/data/3709.png\n",
            " Problem with: drive/MyDrive/data/3710.png\n",
            " Problem with: drive/MyDrive/data/3711.png\n",
            " Problem with: drive/MyDrive/data/3716.png\n",
            " Problem with: drive/MyDrive/data/3717.png\n",
            " Problem with: drive/MyDrive/data/3718.png\n",
            " Problem with: drive/MyDrive/data/3722.png\n",
            " Problem with: drive/MyDrive/data/3724.png\n",
            " Problem with: drive/MyDrive/data/3728.png\n",
            " Problem with: drive/MyDrive/data/3729.png\n",
            " Problem with: drive/MyDrive/data/3735.png\n",
            " Problem with: drive/MyDrive/data/3737.png\n",
            " Problem with: drive/MyDrive/data/3739.png\n",
            " Problem with: drive/MyDrive/data/3742.png\n",
            " Problem with: drive/MyDrive/data/3745.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 78%|███████▊  | 3772/4861 [01:26<00:11, 91.22it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3749.png\n",
            " Problem with: drive/MyDrive/data/3751.png\n",
            " Problem with: drive/MyDrive/data/3754.png\n",
            " Problem with: drive/MyDrive/data/3757.png\n",
            " Problem with: drive/MyDrive/data/3758.png\n",
            " Problem with: drive/MyDrive/data/3760.png\n",
            " Problem with: drive/MyDrive/data/3763.png\n",
            " Problem with: drive/MyDrive/data/3765.png\n",
            " Problem with: drive/MyDrive/data/3766.png\n",
            " Problem with: drive/MyDrive/data/3767.png\n",
            " Problem with: drive/MyDrive/data/3773.png\n",
            " Problem with: drive/MyDrive/data/3777.png\n",
            " Problem with: drive/MyDrive/data/3778.png\n",
            " Problem with: drive/MyDrive/data/3780.png\n",
            " Problem with: drive/MyDrive/data/3781.png\n",
            " Problem with: drive/MyDrive/data/3782.png\n",
            " Problem with: drive/MyDrive/data/3784.png\n",
            " Problem with: drive/MyDrive/data/3785.png\n",
            " Problem with: drive/MyDrive/data/3786.png\n",
            " Problem with: drive/MyDrive/data/3787.png\n",
            " Problem with: drive/MyDrive/data/3788.png\n",
            " Problem with: drive/MyDrive/data/3789.png\n",
            " Problem with: drive/MyDrive/data/3790.png\n",
            " Problem with: drive/MyDrive/data/3792.png\n",
            " Problem with: drive/MyDrive/data/3794.png\n",
            " Problem with: drive/MyDrive/data/3796.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 79%|███████▊  | 3824/4861 [01:26<00:07, 142.22it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3799.png\n",
            " Problem with: drive/MyDrive/data/3800.png\n",
            " Problem with: drive/MyDrive/data/3802.png\n",
            " Problem with: drive/MyDrive/data/3803.png\n",
            " Problem with: drive/MyDrive/data/3807.png\n",
            " Problem with: drive/MyDrive/data/3810.png\n",
            " Problem with: drive/MyDrive/data/3813.png\n",
            " Problem with: drive/MyDrive/data/3814.png\n",
            " Problem with: drive/MyDrive/data/3815.png\n",
            " Problem with: drive/MyDrive/data/3816.png\n",
            " Problem with: drive/MyDrive/data/3817.png\n",
            " Problem with: drive/MyDrive/data/3820.png\n",
            " Problem with: drive/MyDrive/data/3822.png\n",
            " Problem with: drive/MyDrive/data/3824.png\n",
            " Problem with: drive/MyDrive/data/3825.png\n",
            " Problem with: drive/MyDrive/data/3826.png\n",
            " Problem with: drive/MyDrive/data/3828.png\n",
            " Problem with: drive/MyDrive/data/3829.png\n",
            " Problem with: drive/MyDrive/data/3830.png\n",
            " Problem with: drive/MyDrive/data/3833.png\n",
            " Problem with: drive/MyDrive/data/3835.png\n",
            " Problem with: drive/MyDrive/data/3836.png\n",
            " Problem with: drive/MyDrive/data/3838.png\n",
            " Problem with: drive/MyDrive/data/3841.png\n",
            " Problem with: drive/MyDrive/data/3842.png\n",
            " Problem with: drive/MyDrive/data/3846.png\n",
            " Problem with: drive/MyDrive/data/3847.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 80%|███████▉  | 3871/4861 [01:26<00:05, 172.84it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3850.png\n",
            " Problem with: drive/MyDrive/data/3854.png\n",
            " Problem with: drive/MyDrive/data/3859.png\n",
            " Problem with: drive/MyDrive/data/3864.png\n",
            " Problem with: drive/MyDrive/data/3865.png\n",
            " Problem with: drive/MyDrive/data/3867.png\n",
            " Problem with: drive/MyDrive/data/3869.png\n",
            " Problem with: drive/MyDrive/data/3870.png\n",
            " Problem with: drive/MyDrive/data/3871.png\n",
            " Problem with: drive/MyDrive/data/3873.png\n",
            " Problem with: drive/MyDrive/data/3877.png\n",
            " Problem with: drive/MyDrive/data/3878.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 81%|████████  | 3920/4861 [01:27<00:08, 109.99it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3880.png\n",
            " Problem with: drive/MyDrive/data/3882.png\n",
            " Problem with: drive/MyDrive/data/3884.png\n",
            " Problem with: drive/MyDrive/data/3885.png\n",
            " Problem with: drive/MyDrive/data/3886.png\n",
            " Problem with: drive/MyDrive/data/3890.png\n",
            " Problem with: drive/MyDrive/data/3891.png\n",
            " Problem with: drive/MyDrive/data/3892.png\n",
            " Problem with: drive/MyDrive/data/3894.png\n",
            " Problem with: drive/MyDrive/data/3895.png\n",
            " Problem with: drive/MyDrive/data/3897.png\n",
            " Problem with: drive/MyDrive/data/3898.png\n",
            " Problem with: drive/MyDrive/data/3899.png\n",
            " Problem with: drive/MyDrive/data/3900.png\n",
            " Problem with: drive/MyDrive/data/3901.png\n",
            " Problem with: drive/MyDrive/data/3902.png\n",
            " Problem with: drive/MyDrive/data/3903.png\n",
            " Problem with: drive/MyDrive/data/3906.png\n",
            " Problem with: drive/MyDrive/data/3909.png\n",
            " Problem with: drive/MyDrive/data/3911.png\n",
            " Problem with: drive/MyDrive/data/3913.png\n",
            " Problem with: drive/MyDrive/data/3914.png\n",
            " Problem with: drive/MyDrive/data/3917.png\n",
            " Problem with: drive/MyDrive/data/3918.png\n",
            " Problem with: drive/MyDrive/data/3919.png\n",
            " Problem with: drive/MyDrive/data/3922.png\n",
            " Problem with: drive/MyDrive/data/3923.png\n",
            " Problem with: drive/MyDrive/data/3925.png\n",
            " Problem with: drive/MyDrive/data/3927.png\n",
            " Problem with: drive/MyDrive/data/3928.png\n",
            " Problem with: drive/MyDrive/data/3929.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 82%|████████▏ | 3967/4861 [01:27<00:05, 149.79it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3933.png\n",
            " Problem with: drive/MyDrive/data/3937.png\n",
            " Problem with: drive/MyDrive/data/3938.png\n",
            " Problem with: drive/MyDrive/data/3939.png\n",
            " Problem with: drive/MyDrive/data/3942.png\n",
            " Problem with: drive/MyDrive/data/3943.png\n",
            " Problem with: drive/MyDrive/data/3944.png\n",
            " Problem with: drive/MyDrive/data/3945.png\n",
            " Problem with: drive/MyDrive/data/3947.png\n",
            " Problem with: drive/MyDrive/data/3948.png\n",
            " Problem with: drive/MyDrive/data/3950.png\n",
            " Problem with: drive/MyDrive/data/3955.png\n",
            " Problem with: drive/MyDrive/data/3957.png\n",
            " Problem with: drive/MyDrive/data/3958.png\n",
            " Problem with: drive/MyDrive/data/3961.png\n",
            " Problem with: drive/MyDrive/data/3962.png\n",
            " Problem with: drive/MyDrive/data/3965.png\n",
            " Problem with: drive/MyDrive/data/3966.png\n",
            " Problem with: drive/MyDrive/data/3969.png\n",
            " Problem with: drive/MyDrive/data/3970.png\n",
            " Problem with: drive/MyDrive/data/3971.png\n",
            " Problem with: drive/MyDrive/data/3974.png\n",
            " Problem with: drive/MyDrive/data/3975.png\n",
            " Problem with: drive/MyDrive/data/3977.png\n",
            " Problem with: drive/MyDrive/data/3978.png\n",
            " Problem with: drive/MyDrive/data/3980.png\n",
            " Problem with: drive/MyDrive/data/3981.png\n",
            " Problem with: drive/MyDrive/data/3983.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 83%|████████▎ | 4014/4861 [01:27<00:04, 182.86it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/3986.png\n",
            " Problem with: drive/MyDrive/data/3991.png\n",
            " Problem with: drive/MyDrive/data/3992.png\n",
            " Problem with: drive/MyDrive/data/3993.png\n",
            " Problem with: drive/MyDrive/data/3995.png\n",
            " Problem with: drive/MyDrive/data/3997.png\n",
            " Problem with: drive/MyDrive/data/3998.png\n",
            " Problem with: drive/MyDrive/data/4001.png\n",
            " Problem with: drive/MyDrive/data/4004.png\n",
            " Problem with: drive/MyDrive/data/4005.png\n",
            " Problem with: drive/MyDrive/data/4006.png\n",
            " Problem with: drive/MyDrive/data/4008.png\n",
            " Problem with: drive/MyDrive/data/4011.png\n",
            " Problem with: drive/MyDrive/data/4012.png\n",
            " Problem with: drive/MyDrive/data/4014.png\n",
            " Problem with: drive/MyDrive/data/4016.png\n",
            " Problem with: drive/MyDrive/data/4017.png\n",
            " Problem with: drive/MyDrive/data/4019.png\n",
            " Problem with: drive/MyDrive/data/4022.png\n",
            " Problem with: drive/MyDrive/data/4028.png\n",
            " Problem with: drive/MyDrive/data/4031.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 84%|████████▎ | 4065/4861 [01:28<00:07, 108.89it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4038.png\n",
            " Problem with: drive/MyDrive/data/4040.png\n",
            " Problem with: drive/MyDrive/data/4041.png\n",
            " Problem with: drive/MyDrive/data/4043.png\n",
            " Problem with: drive/MyDrive/data/4045.png\n",
            " Problem with: drive/MyDrive/data/4046.png\n",
            " Problem with: drive/MyDrive/data/4047.png\n",
            " Problem with: drive/MyDrive/data/4048.png\n",
            " Problem with: drive/MyDrive/data/4051.png\n",
            " Problem with: drive/MyDrive/data/4054.png\n",
            " Problem with: drive/MyDrive/data/4055.png\n",
            " Problem with: drive/MyDrive/data/4056.png\n",
            " Problem with: drive/MyDrive/data/4057.png\n",
            " Problem with: drive/MyDrive/data/4058.png\n",
            " Problem with: drive/MyDrive/data/4061.png\n",
            " Problem with: drive/MyDrive/data/4062.png\n",
            " Problem with: drive/MyDrive/data/4063.png\n",
            " Problem with: drive/MyDrive/data/4066.png\n",
            " Problem with: drive/MyDrive/data/4067.png\n",
            " Problem with: drive/MyDrive/data/4071.png\n",
            " Problem with: drive/MyDrive/data/4072.png\n",
            " Problem with: drive/MyDrive/data/4074.png\n",
            " Problem with: drive/MyDrive/data/4075.png\n",
            " Problem with: drive/MyDrive/data/4077.png\n",
            " Problem with: drive/MyDrive/data/4078.png\n",
            " Problem with: drive/MyDrive/data/4079.png\n",
            " Problem with: drive/MyDrive/data/4081.png\n",
            " Problem with: drive/MyDrive/data/4082.png\n",
            " Problem with: drive/MyDrive/data/4085.png\n",
            " Problem with: drive/MyDrive/data/4086.png\n",
            " Problem with: drive/MyDrive/data/4088.png\n",
            " Problem with: drive/MyDrive/data/4089.png\n",
            " Problem with: drive/MyDrive/data/4090.png\n",
            " Problem with: drive/MyDrive/data/4091.png\n",
            " Problem with: drive/MyDrive/data/4092.png\n",
            " Problem with: drive/MyDrive/data/4093.png\n",
            " Problem with: drive/MyDrive/data/4094.png\n",
            " Problem with: drive/MyDrive/data/4095.png\n",
            " Problem with: drive/MyDrive/data/4096.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 85%|████████▌ | 4146/4861 [01:28<00:04, 171.16it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4101.png\n",
            " Problem with: drive/MyDrive/data/4102.png\n",
            " Problem with: drive/MyDrive/data/4104.png\n",
            " Problem with: drive/MyDrive/data/4106.png\n",
            " Problem with: drive/MyDrive/data/4107.png\n",
            " Problem with: drive/MyDrive/data/4108.png\n",
            " Problem with: drive/MyDrive/data/4109.png\n",
            " Problem with: drive/MyDrive/data/4110.png\n",
            " Problem with: drive/MyDrive/data/4112.png\n",
            " Problem with: drive/MyDrive/data/4114.png\n",
            " Problem with: drive/MyDrive/data/4115.png\n",
            " Problem with: drive/MyDrive/data/4116.png\n",
            " Problem with: drive/MyDrive/data/4118.png\n",
            " Problem with: drive/MyDrive/data/4120.png\n",
            " Problem with: drive/MyDrive/data/4123.png\n",
            " Problem with: drive/MyDrive/data/4124.png\n",
            " Problem with: drive/MyDrive/data/4125.png\n",
            " Problem with: drive/MyDrive/data/4128.png\n",
            " Problem with: drive/MyDrive/data/4130.png\n",
            " Problem with: drive/MyDrive/data/4133.png\n",
            " Problem with: drive/MyDrive/data/4136.png\n",
            " Problem with: drive/MyDrive/data/4137.png\n",
            " Problem with: drive/MyDrive/data/4140.png\n",
            " Problem with: drive/MyDrive/data/4143.png\n",
            " Problem with: drive/MyDrive/data/4148.png\n",
            " Problem with: drive/MyDrive/data/4149.png"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 86%|████████▌ | 4173/4861 [01:28<00:03, 190.92it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Problem with: drive/MyDrive/data/4150.png\n",
            " Problem with: drive/MyDrive/data/4152.png\n",
            " Problem with: drive/MyDrive/data/4154.png\n",
            " Problem with: drive/MyDrive/data/4155.png\n",
            " Problem with: drive/MyDrive/data/4156.png\n",
            " Problem with: drive/MyDrive/data/4157.png\n",
            " Problem with: drive/MyDrive/data/4159.png\n",
            " Problem with: drive/MyDrive/data/4160.png\n",
            " Problem with: drive/MyDrive/data/4162.png\n",
            " Problem with: drive/MyDrive/data/4164.png\n",
            " Problem with: drive/MyDrive/data/4165.png\n",
            " Problem with: drive/MyDrive/data/4166.png\n",
            " Problem with: drive/MyDrive/data/4168.png\n",
            " Problem with: drive/MyDrive/data/4169.png\n",
            " Problem with: drive/MyDrive/data/4171.png\n",
            " Problem with: drive/MyDrive/data/4174.png\n",
            " Problem with: drive/MyDrive/data/4176.png\n",
            " Problem with: drive/MyDrive/data/4177.png\n",
            " Problem with: drive/MyDrive/data/4178.png\n",
            " Problem with: drive/MyDrive/data/4179.png\n",
            " Problem with: drive/MyDrive/data/4180.png\n",
            " Problem with: drive/MyDrive/data/4187.png\n",
            " Problem with: drive/MyDrive/data/4189.png\n",
            " Problem with: drive/MyDrive/data/4190.png\n",
            " Problem with: drive/MyDrive/data/4191.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 88%|████████▊ | 4256/4861 [01:30<00:05, 111.35it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4203.png\n",
            " Problem with: drive/MyDrive/data/4207.png\n",
            " Problem with: drive/MyDrive/data/4208.png\n",
            " Problem with: drive/MyDrive/data/4210.png\n",
            " Problem with: drive/MyDrive/data/4211.png\n",
            " Problem with: drive/MyDrive/data/4212.png\n",
            " Problem with: drive/MyDrive/data/4213.png\n",
            " Problem with: drive/MyDrive/data/4216.png\n",
            " Problem with: drive/MyDrive/data/4217.png\n",
            " Problem with: drive/MyDrive/data/4218.png\n",
            " Problem with: drive/MyDrive/data/4219.png\n",
            " Problem with: drive/MyDrive/data/4220.png\n",
            " Problem with: drive/MyDrive/data/4221.png\n",
            " Problem with: drive/MyDrive/data/4225.png\n",
            " Problem with: drive/MyDrive/data/4227.png\n",
            " Problem with: drive/MyDrive/data/4228.png\n",
            " Problem with: drive/MyDrive/data/4229.png\n",
            " Problem with: drive/MyDrive/data/4230.png\n",
            " Problem with: drive/MyDrive/data/4232.png\n",
            " Problem with: drive/MyDrive/data/4233.png\n",
            " Problem with: drive/MyDrive/data/4234.png\n",
            " Problem with: drive/MyDrive/data/4236.png\n",
            " Problem with: drive/MyDrive/data/4240.png\n",
            " Problem with: drive/MyDrive/data/4241.png\n",
            " Problem with: drive/MyDrive/data/4243.png\n",
            " Problem with: drive/MyDrive/data/4244.png\n",
            " Problem with: drive/MyDrive/data/4245.png\n",
            " Problem with: drive/MyDrive/data/4247.png\n",
            " Problem with: drive/MyDrive/data/4248.png\n",
            " Problem with: drive/MyDrive/data/4249.png\n",
            " Problem with: drive/MyDrive/data/4250.png\n",
            " Problem with: drive/MyDrive/data/4251.png\n",
            " Problem with: drive/MyDrive/data/4252.png\n",
            " Problem with: drive/MyDrive/data/4253.png\n",
            " Problem with: drive/MyDrive/data/4255.png\n",
            " Problem with: drive/MyDrive/data/4257.png\n",
            " Problem with: drive/MyDrive/data/4258.png\n",
            " Problem with: drive/MyDrive/data/4259.png\n",
            " Problem with: drive/MyDrive/data/4260.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 88%|████████▊ | 4280/4861 [01:30<00:08, 70.08it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4265.png\n",
            " Problem with: drive/MyDrive/data/4266.png\n",
            " Problem with: drive/MyDrive/data/4267.png\n",
            " Problem with: drive/MyDrive/data/4271.png\n",
            " Problem with: drive/MyDrive/data/4273.png\n",
            " Problem with: drive/MyDrive/data/4277.png\n",
            " Problem with: drive/MyDrive/data/4281.png\n",
            " Problem with: drive/MyDrive/data/4290.png\n",
            " Problem with: drive/MyDrive/data/4293.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 89%|████████▉ | 4323/4861 [01:31<00:07, 69.87it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4299.png\n",
            " Problem with: drive/MyDrive/data/4304.png\n",
            " Problem with: drive/MyDrive/data/4305.png\n",
            " Problem with: drive/MyDrive/data/4309.png\n",
            " Problem with: drive/MyDrive/data/4311.png\n",
            " Problem with: drive/MyDrive/data/4312.png\n",
            " Problem with: drive/MyDrive/data/4314.png\n",
            " Problem with: drive/MyDrive/data/4315.png\n",
            " Problem with: drive/MyDrive/data/4316.png\n",
            " Problem with: drive/MyDrive/data/4319.png\n",
            " Problem with: drive/MyDrive/data/4320.png\n",
            " Problem with: drive/MyDrive/data/4322.png\n",
            " Problem with: drive/MyDrive/data/4324.png\n",
            " Problem with: drive/MyDrive/data/4327.png\n",
            " Problem with: drive/MyDrive/data/4328.png\n",
            " Problem with: drive/MyDrive/data/4331.png\n",
            " Problem with: drive/MyDrive/data/4334.png\n",
            " Problem with: drive/MyDrive/data/4337.png\n",
            " Problem with: drive/MyDrive/data/4338.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 89%|████████▉ | 4342/4861 [01:31<00:06, 82.52it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4343.png\n",
            " Problem with: drive/MyDrive/data/4346.png\n",
            " Problem with: drive/MyDrive/data/4347.png\n",
            " Problem with: drive/MyDrive/data/4351.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 90%|████████▉ | 4359/4861 [01:32<00:12, 41.37it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4356.png\n",
            " Problem with: drive/MyDrive/data/4359.png\n",
            " Problem with: drive/MyDrive/data/4360.png\n",
            " Problem with: drive/MyDrive/data/4362.png\n",
            " Problem with: drive/MyDrive/data/4363.png\n",
            " Problem with: drive/MyDrive/data/4364.png\n",
            " Problem with: drive/MyDrive/data/4365.png\n",
            " Problem with: drive/MyDrive/data/4366.png\n",
            " Problem with: drive/MyDrive/data/4367.png\n",
            " Problem with: drive/MyDrive/data/4369.png\n",
            " Problem with: drive/MyDrive/data/4370.png\n",
            " Problem with: drive/MyDrive/data/4371.png\n",
            " Problem with: drive/MyDrive/data/4372.png\n",
            " Problem with: drive/MyDrive/data/4373.png\n",
            " Problem with: drive/MyDrive/data/4375.png\n",
            " Problem with: drive/MyDrive/data/4376.png\n",
            " Problem with: drive/MyDrive/data/4378.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 90%|█████████ | 4380/4861 [01:33<00:11, 40.83it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4384.png\n",
            " Problem with: drive/MyDrive/data/4387.png\n",
            " Problem with: drive/MyDrive/data/4388.png\n",
            " Problem with: drive/MyDrive/data/4389.png\n",
            " Problem with: drive/MyDrive/data/4390.png\n",
            " Problem with: drive/MyDrive/data/4395.png\n",
            " Problem with: drive/MyDrive/data/4396.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 90%|█████████ | 4397/4861 [01:33<00:12, 37.30it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4400.png\n",
            " Problem with: drive/MyDrive/data/4401.png\n",
            " Problem with: drive/MyDrive/data/4402.png\n",
            " Problem with: drive/MyDrive/data/4403.png\n",
            " Problem with: drive/MyDrive/data/4404.png\n",
            " Problem with: drive/MyDrive/data/4405.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 92%|█████████▏| 4455/4861 [01:34<00:06, 66.63it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4410.png\n",
            " Problem with: drive/MyDrive/data/4411.png\n",
            " Problem with: drive/MyDrive/data/4412.png\n",
            " Problem with: drive/MyDrive/data/4413.png\n",
            " Problem with: drive/MyDrive/data/4414.png\n",
            " Problem with: drive/MyDrive/data/4416.png\n",
            " Problem with: drive/MyDrive/data/4420.png\n",
            " Problem with: drive/MyDrive/data/4424.png\n",
            " Problem with: drive/MyDrive/data/4430.png\n",
            " Problem with: drive/MyDrive/data/4431.png\n",
            " Problem with: drive/MyDrive/data/4432.png\n",
            " Problem with: drive/MyDrive/data/4437.png\n",
            " Problem with: drive/MyDrive/data/4438.png\n",
            " Problem with: drive/MyDrive/data/4440.png\n",
            " Problem with: drive/MyDrive/data/4442.png\n",
            " Problem with: drive/MyDrive/data/4443.png\n",
            " Problem with: drive/MyDrive/data/4444.png\n",
            " Problem with: drive/MyDrive/data/4447.png\n",
            " Problem with: drive/MyDrive/data/4449.png\n",
            " Problem with: drive/MyDrive/data/4450.png\n",
            " Problem with: drive/MyDrive/data/4451.png\n",
            " Problem with: drive/MyDrive/data/4452.png\n",
            " Problem with: drive/MyDrive/data/4454.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 93%|█████████▎| 4500/4861 [01:34<00:03, 105.44it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4457.png\n",
            " Problem with: drive/MyDrive/data/4458.png\n",
            " Problem with: drive/MyDrive/data/4460.png\n",
            " Problem with: drive/MyDrive/data/4462.png\n",
            " Problem with: drive/MyDrive/data/4464.png\n",
            " Problem with: drive/MyDrive/data/4465.png\n",
            " Problem with: drive/MyDrive/data/4466.png\n",
            " Problem with: drive/MyDrive/data/4468.png\n",
            " Problem with: drive/MyDrive/data/4469.png\n",
            " Problem with: drive/MyDrive/data/4471.png\n",
            " Problem with: drive/MyDrive/data/4472.png\n",
            " Problem with: drive/MyDrive/data/4473.png\n",
            " Problem with: drive/MyDrive/data/4474.png\n",
            " Problem with: drive/MyDrive/data/4476.png\n",
            " Problem with: drive/MyDrive/data/4480.png\n",
            " Problem with: drive/MyDrive/data/4482.png\n",
            " Problem with: drive/MyDrive/data/4486.png\n",
            " Problem with: drive/MyDrive/data/4487.png\n",
            " Problem with: drive/MyDrive/data/4488.png\n",
            " Problem with: drive/MyDrive/data/4489.png\n",
            " Problem with: drive/MyDrive/data/4496.png\n",
            " Problem with: drive/MyDrive/data/4497.png\n",
            " Problem with: drive/MyDrive/data/4499.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 94%|█████████▎| 4546/4861 [01:34<00:02, 144.39it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4504.png\n",
            " Problem with: drive/MyDrive/data/4507.png\n",
            " Problem with: drive/MyDrive/data/4508.png\n",
            " Problem with: drive/MyDrive/data/4509.png\n",
            " Problem with: drive/MyDrive/data/4510.png\n",
            " Problem with: drive/MyDrive/data/4511.png\n",
            " Problem with: drive/MyDrive/data/4512.png\n",
            " Problem with: drive/MyDrive/data/4513.png\n",
            " Problem with: drive/MyDrive/data/4514.png\n",
            " Problem with: drive/MyDrive/data/4516.png\n",
            " Problem with: drive/MyDrive/data/4517.png\n",
            " Problem with: drive/MyDrive/data/4519.png\n",
            " Problem with: drive/MyDrive/data/4523.png\n",
            " Problem with: drive/MyDrive/data/4524.png\n",
            " Problem with: drive/MyDrive/data/4526.png\n",
            " Problem with: drive/MyDrive/data/4528.png\n",
            " Problem with: drive/MyDrive/data/4530.png\n",
            " Problem with: drive/MyDrive/data/4538.png\n",
            " Problem with: drive/MyDrive/data/4539.png\n",
            " Problem with: drive/MyDrive/data/4540.png\n",
            " Problem with: drive/MyDrive/data/4541.png\n",
            " Problem with: drive/MyDrive/data/4543.png\n",
            " Problem with: drive/MyDrive/data/4545.png\n",
            " Problem with: drive/MyDrive/data/4547.png\n",
            " Problem with: drive/MyDrive/data/4549.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 94%|█████████▍| 4590/4861 [01:35<00:01, 171.76it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4552.png\n",
            " Problem with: drive/MyDrive/data/4553.png\n",
            " Problem with: drive/MyDrive/data/4554.png\n",
            " Problem with: drive/MyDrive/data/4555.png\n",
            " Problem with: drive/MyDrive/data/4556.png\n",
            " Problem with: drive/MyDrive/data/4557.png\n",
            " Problem with: drive/MyDrive/data/4560.png\n",
            " Problem with: drive/MyDrive/data/4562.png\n",
            " Problem with: drive/MyDrive/data/4565.png\n",
            " Problem with: drive/MyDrive/data/4566.png\n",
            " Problem with: drive/MyDrive/data/4570.png\n",
            " Problem with: drive/MyDrive/data/4575.png\n",
            " Problem with: drive/MyDrive/data/4578.png\n",
            " Problem with: drive/MyDrive/data/4581.png\n",
            " Problem with: drive/MyDrive/data/4582.png\n",
            " Problem with: drive/MyDrive/data/4584.png\n",
            " Problem with: drive/MyDrive/data/4585.png\n",
            " Problem with: drive/MyDrive/data/4586.png\n",
            " Problem with: drive/MyDrive/data/4588.png\n",
            " Problem with: drive/MyDrive/data/4590.png\n",
            " Problem with: drive/MyDrive/data/4592.png\n",
            " Problem with: drive/MyDrive/data/4593.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 95%|█████████▍| 4611/4861 [01:35<00:01, 179.51it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4599.png\n",
            " Problem with: drive/MyDrive/data/4603.png\n",
            " Problem with: drive/MyDrive/data/4604.png\n",
            " Problem with: drive/MyDrive/data/4605.png\n",
            " Problem with: drive/MyDrive/data/4606.png\n",
            " Problem with: drive/MyDrive/data/4607.png\n",
            " Problem with: drive/MyDrive/data/4610.png\n",
            " Problem with: drive/MyDrive/data/4612.png\n",
            " Problem with: drive/MyDrive/data/4613.png\n",
            " Problem with: drive/MyDrive/data/4614.png\n",
            " Problem with: drive/MyDrive/data/4615.png\n",
            " Problem with: drive/MyDrive/data/4616.png\n",
            " Problem with: drive/MyDrive/data/4619.png\n",
            " Problem with: drive/MyDrive/data/4621.png\n",
            " Problem with: drive/MyDrive/data/4622.png\n",
            " Problem with: drive/MyDrive/data/4624.png\n",
            " Problem with: drive/MyDrive/data/4625.png\n",
            " Problem with: drive/MyDrive/data/4626.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 96%|█████████▌| 4656/4861 [01:36<00:02, 101.42it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4631.png\n",
            " Problem with: drive/MyDrive/data/4632.png\n",
            " Problem with: drive/MyDrive/data/4633.png\n",
            " Problem with: drive/MyDrive/data/4636.png\n",
            " Problem with: drive/MyDrive/data/4637.png\n",
            " Problem with: drive/MyDrive/data/4639.png\n",
            " Problem with: drive/MyDrive/data/4641.png\n",
            " Problem with: drive/MyDrive/data/4645.png\n",
            " Problem with: drive/MyDrive/data/4647.png\n",
            " Problem with: drive/MyDrive/data/4648.png\n",
            " Problem with: drive/MyDrive/data/4649.png\n",
            " Problem with: drive/MyDrive/data/4651.png\n",
            " Problem with: drive/MyDrive/data/4653.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 97%|█████████▋| 4697/4861 [01:36<00:02, 81.09it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4658.png\n",
            " Problem with: drive/MyDrive/data/4659.png\n",
            " Problem with: drive/MyDrive/data/4662.png\n",
            " Problem with: drive/MyDrive/data/4664.png\n",
            " Problem with: drive/MyDrive/data/4666.png\n",
            " Problem with: drive/MyDrive/data/4668.png\n",
            " Problem with: drive/MyDrive/data/4669.png\n",
            " Problem with: drive/MyDrive/data/4670.png\n",
            " Problem with: drive/MyDrive/data/4671.png\n",
            " Problem with: drive/MyDrive/data/4672.png\n",
            " Problem with: drive/MyDrive/data/4674.png\n",
            " Problem with: drive/MyDrive/data/4678.png\n",
            " Problem with: drive/MyDrive/data/4680.png\n",
            " Problem with: drive/MyDrive/data/4683.png\n",
            " Problem with: drive/MyDrive/data/4684.png\n",
            " Problem with: drive/MyDrive/data/4689.png\n",
            " Problem with: drive/MyDrive/data/4693.png\n",
            " Problem with: drive/MyDrive/data/4695.png\n",
            " Problem with: drive/MyDrive/data/4696.png\n",
            " Problem with: drive/MyDrive/data/4698.png\n",
            " Problem with: drive/MyDrive/data/4699.png\n",
            " Problem with: drive/MyDrive/data/4702.png\n",
            " Problem with: drive/MyDrive/data/4704.png\n",
            " Problem with: drive/MyDrive/data/4705.png\n",
            " Problem with: drive/MyDrive/data/4706.png\n",
            " Problem with: drive/MyDrive/data/4708.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 97%|█████████▋| 4722/4861 [01:36<00:01, 104.32it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4710.png\n",
            " Problem with: drive/MyDrive/data/4711.png\n",
            " Problem with: drive/MyDrive/data/4713.png\n",
            " Problem with: drive/MyDrive/data/4715.png\n",
            " Problem with: drive/MyDrive/data/4717.png\n",
            " Problem with: drive/MyDrive/data/4718.png\n",
            " Problem with: drive/MyDrive/data/4722.png\n",
            " Problem with: drive/MyDrive/data/4723.png\n",
            " Problem with: drive/MyDrive/data/4724.png\n",
            " Problem with: drive/MyDrive/data/4726.png\n",
            " Problem with: drive/MyDrive/data/4727.png\n",
            " Problem with: drive/MyDrive/data/4729.png\n",
            " Problem with: drive/MyDrive/data/4730.png\n",
            " Problem with: drive/MyDrive/data/4734.png\n",
            " Problem with: drive/MyDrive/data/4735.png\n",
            " Problem with: drive/MyDrive/data/4737.png\n",
            " Problem with: drive/MyDrive/data/4740.png\n",
            " Problem with: drive/MyDrive/data/4741.png\n",
            " Problem with: drive/MyDrive/data/4742.png\n",
            " Problem with: drive/MyDrive/data/4743.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 98%|█████████▊| 4744/4861 [01:37<00:01, 70.48it/s] "
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4745.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            " 98%|█████████▊| 4783/4861 [01:38<00:01, 71.36it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4747.png\n",
            " Problem with: drive/MyDrive/data/4748.png\n",
            " Problem with: drive/MyDrive/data/4749.png\n",
            " Problem with: drive/MyDrive/data/4751.png\n",
            " Problem with: drive/MyDrive/data/4752.png\n",
            " Problem with: drive/MyDrive/data/4754.png\n",
            " Problem with: drive/MyDrive/data/4755.png\n",
            " Problem with: drive/MyDrive/data/4760.png\n",
            " Problem with: drive/MyDrive/data/4763.png\n",
            " Problem with: drive/MyDrive/data/4764.png\n",
            " Problem with: drive/MyDrive/data/4765.png\n",
            " Problem with: drive/MyDrive/data/4766.png\n",
            " Problem with: drive/MyDrive/data/4769.png\n",
            " Problem with: drive/MyDrive/data/4770.png\n",
            " Problem with: drive/MyDrive/data/4773.png\n",
            " Problem with: drive/MyDrive/data/4775.png\n",
            " Problem with: drive/MyDrive/data/4777.png\n",
            " Problem with: drive/MyDrive/data/4778.png\n",
            " Problem with: drive/MyDrive/data/4781.png\n",
            " Problem with: drive/MyDrive/data/4784.png\n",
            " Problem with: drive/MyDrive/data/4786.png\n",
            " Problem with: drive/MyDrive/data/4788.png\n",
            " Problem with: drive/MyDrive/data/4790.png\n",
            " Problem with: drive/MyDrive/data/4793.png\n",
            " Problem with: drive/MyDrive/data/4795.png"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r 99%|█████████▉| 4804/4861 [01:38<00:00, 88.22it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " Problem with: drive/MyDrive/data/4796.png\n",
            " Problem with: drive/MyDrive/data/4802.png\n",
            " Problem with: drive/MyDrive/data/4803.png\n",
            " Problem with: drive/MyDrive/data/4805.png\n",
            " Problem with: drive/MyDrive/data/4806.png\n",
            " Problem with: drive/MyDrive/data/4807.png\n",
            " Problem with: drive/MyDrive/data/4808.png\n",
            " Problem with: drive/MyDrive/data/4810.png\n",
            " Problem with: drive/MyDrive/data/4813.png\n",
            " Problem with: drive/MyDrive/data/4815.png\n",
            " Problem with: drive/MyDrive/data/4818.png\n",
            " Problem with: drive/MyDrive/data/4820.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|█████████▉| 4849/4861 [01:38<00:00, 84.26it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4823.png\n",
            " Problem with: drive/MyDrive/data/4824.png\n",
            " Problem with: drive/MyDrive/data/4825.png\n",
            " Problem with: drive/MyDrive/data/4826.png\n",
            " Problem with: drive/MyDrive/data/4828.png\n",
            " Problem with: drive/MyDrive/data/4829.png\n",
            " Problem with: drive/MyDrive/data/4832.png\n",
            " Problem with: drive/MyDrive/data/4833.png\n",
            " Problem with: drive/MyDrive/data/4834.png\n",
            " Problem with: drive/MyDrive/data/4836.png\n",
            " Problem with: drive/MyDrive/data/4837.png\n",
            " Problem with: drive/MyDrive/data/4840.png\n",
            " Problem with: drive/MyDrive/data/4842.png\n",
            " Problem with: drive/MyDrive/data/4843.png\n",
            " Problem with: drive/MyDrive/data/4844.png\n",
            " Problem with: drive/MyDrive/data/4845.png\n",
            " Problem with: drive/MyDrive/data/4851.png\n",
            " Problem with: drive/MyDrive/data/4853.png\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\r100%|██████████| 4861/4861 [01:39<00:00, 48.96it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " Problem with: drive/MyDrive/data/4856.png\n",
            " Problem with: drive/MyDrive/data/4857.png\n",
            "Total missing: 2352\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# X_train = np.zeros((len(train_ids), IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS), dtype='float32')\n",
        "final_train_ids = []\n",
        "missing_count = 0\n",
        "print('Getting train images ... ')\n",
        "sys.stdout.flush()\n",
        "for n, id_ in tqdm(enumerate(train_ids), total=len(train_ids)):\n",
        "    path = TRAIN_PATH +str(n+1) + '.png'\n",
        "    try:\n",
        "        img = imread(path)\n",
        "      \n",
        "        img = img.astype('float32') / 255.\n",
        "        \n",
        "        img = resize(img, (IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS), mode='constant', preserve_range=True)\n",
        "        \n",
        "        X_train[n-missing_count] = img\n",
        "    except:\n",
        "        print(\" Problem with: \"+path)\n",
        "        missing_count += 1\n",
        "        \n",
        "print(\"Total missing: \"+ str(missing_count))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wBQE9QkIhd_G",
        "outputId": "5d6a072a-c4c5-4c8b-fe84-e2fd6853808b"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[[0.29480636],\n",
              "         [0.29705656],\n",
              "         [0.29462543],\n",
              "         ...,\n",
              "         [0.47789013],\n",
              "         [0.5854294 ],\n",
              "         [0.4700573 ]],\n",
              "\n",
              "        [[0.3131685 ],\n",
              "         [0.35940102],\n",
              "         [0.37772852],\n",
              "         ...,\n",
              "         [0.35423702],\n",
              "         [0.38718137],\n",
              "         [0.5242787 ]],\n",
              "\n",
              "        [[0.31570783],\n",
              "         [0.32215717],\n",
              "         [0.3800476 ],\n",
              "         ...,\n",
              "         [0.34571236],\n",
              "         [0.3436773 ],\n",
              "         [0.34600422]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0.8629259 ],\n",
              "         [0.87450796],\n",
              "         [0.8801735 ],\n",
              "         ...,\n",
              "         [0.5991863 ],\n",
              "         [0.59341097],\n",
              "         [0.59100485]],\n",
              "\n",
              "        [[0.8694451 ],\n",
              "         [0.8772959 ],\n",
              "         [0.8643946 ],\n",
              "         ...,\n",
              "         [0.6053736 ],\n",
              "         [0.5921958 ],\n",
              "         [0.5862467 ]],\n",
              "\n",
              "        [[0.8147418 ],\n",
              "         [0.81526476],\n",
              "         [0.6964809 ],\n",
              "         ...,\n",
              "         [0.5402367 ],\n",
              "         [0.46732837],\n",
              "         [0.5097872 ]]],\n",
              "\n",
              "\n",
              "       [[[0.80203986],\n",
              "         [0.80455714],\n",
              "         [0.80728143],\n",
              "         ...,\n",
              "         [0.42750913],\n",
              "         [0.42915487],\n",
              "         [0.39691985]],\n",
              "\n",
              "        [[0.8668729 ],\n",
              "         [0.8709444 ],\n",
              "         [0.87048364],\n",
              "         ...,\n",
              "         [0.3019878 ],\n",
              "         [0.3265794 ],\n",
              "         [0.38204554]],\n",
              "\n",
              "        [[0.876796  ],\n",
              "         [0.87746406],\n",
              "         [0.8778469 ],\n",
              "         ...,\n",
              "         [0.43656108],\n",
              "         [0.47127295],\n",
              "         [0.45283923]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0.34868437],\n",
              "         [0.3591046 ],\n",
              "         [0.56611586],\n",
              "         ...,\n",
              "         [0.45661226],\n",
              "         [0.44082472],\n",
              "         [0.46390143]],\n",
              "\n",
              "        [[0.4226998 ],\n",
              "         [0.36976624],\n",
              "         [0.48749885],\n",
              "         ...,\n",
              "         [0.44721255],\n",
              "         [0.4531382 ],\n",
              "         [0.47400668]],\n",
              "\n",
              "        [[0.3910438 ],\n",
              "         [0.45450836],\n",
              "         [0.32667872],\n",
              "         ...,\n",
              "         [0.55229896],\n",
              "         [0.50969166],\n",
              "         [0.43797082]]],\n",
              "\n",
              "\n",
              "       [[[0.32541993],\n",
              "         [0.29237026],\n",
              "         [0.29455584],\n",
              "         ...,\n",
              "         [0.4514462 ],\n",
              "         [0.4009462 ],\n",
              "         [0.33615303]],\n",
              "\n",
              "        [[0.28413245],\n",
              "         [0.29096887],\n",
              "         [0.29297265],\n",
              "         ...,\n",
              "         [0.40916047],\n",
              "         [0.37003583],\n",
              "         [0.29031777]],\n",
              "\n",
              "        [[0.30708075],\n",
              "         [0.318417  ],\n",
              "         [0.31881908],\n",
              "         ...,\n",
              "         [0.36218762],\n",
              "         [0.2814122 ],\n",
              "         [0.20200472]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0.22074524],\n",
              "         [0.220855  ],\n",
              "         [0.23981215],\n",
              "         ...,\n",
              "         [0.5719585 ],\n",
              "         [0.58829635],\n",
              "         [0.51821834]],\n",
              "\n",
              "        [[0.23785804],\n",
              "         [0.2432271 ],\n",
              "         [0.25499272],\n",
              "         ...,\n",
              "         [0.5816619 ],\n",
              "         [0.61963457],\n",
              "         [0.5350195 ]],\n",
              "\n",
              "        [[0.22584662],\n",
              "         [0.27549875],\n",
              "         [0.24974196],\n",
              "         ...,\n",
              "         [0.5538732 ],\n",
              "         [0.49634767],\n",
              "         [0.62175226]]],\n",
              "\n",
              "\n",
              "       ...,\n",
              "\n",
              "\n",
              "       [[[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]]],\n",
              "\n",
              "\n",
              "       [[[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]]],\n",
              "\n",
              "\n",
              "       [[[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        ...,\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]],\n",
              "\n",
              "        [[0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         ...,\n",
              "         [0.        ],\n",
              "         [0.        ],\n",
              "         [0.        ]]]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XkD_imJt6odM",
        "outputId": "a0a7c04d-4576-4ada-a387-2c6e2a602ca0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"model\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " input_1 (InputLayer)        [(None, 64, 96, 1)]       0         \n",
            "                                                                 \n",
            " encode1 (Conv2D)            (None, 64, 96, 128)       2176      \n",
            "                                                                 \n",
            " encode2 (Conv2D)            (None, 64, 96, 64)        73792     \n",
            "                                                                 \n",
            " max_pooling2d (MaxPooling2D  (None, 32, 48, 64)       0         \n",
            " )                                                               \n",
            "                                                                 \n",
            " encode3 (Conv2D)            (None, 32, 48, 64)        36928     \n",
            "                                                                 \n",
            " encode4 (Conv2D)            (None, 32, 48, 32)        8224      \n",
            "                                                                 \n",
            " max_pooling2d_1 (MaxPooling  (None, 16, 24, 32)       0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode5 (Conv2D)            (None, 16, 24, 64)        18496     \n",
            "                                                                 \n",
            " encode6 (Conv2D)            (None, 16, 24, 32)        8224      \n",
            "                                                                 \n",
            " max_pooling2d_2 (MaxPooling  (None, 8, 12, 32)        0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode7 (Conv2D)            (None, 8, 12, 64)         18496     \n",
            "                                                                 \n",
            " encode8 (Conv2D)            (None, 8, 12, 32)         8224      \n",
            "                                                                 \n",
            " max_pooling2d_3 (MaxPooling  (None, 4, 6, 32)         0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode9 (Conv2D)            (None, 4, 6, 32)          9248      \n",
            "                                                                 \n",
            " flatten (Flatten)           (None, 768)               0         \n",
            "                                                                 \n",
            " encode10 (Dense)            (None, 256)               196864    \n",
            "                                                                 \n",
            " encode11 (Dense)            (None, 128)               32896     \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 413,568\n",
            "Trainable params: 413,568\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "def Encoder():\n",
        "    inp = Input(shape=INPUT_SHAPE)\n",
        "    x = Conv2D(128, (4, 4), activation='elu', padding='same',name='encode1')(inp)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode2')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode3')(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same',name='encode4')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode5')(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same',name='encode6')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode7')(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same',name='encode8')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(32, (3, 3), activation='elu', padding='same',name='encode9')(x)\n",
        "    x = Flatten()(x)\n",
        "    x = Dense(256, activation='elu',name='encode10')(x)\n",
        "    encoded = Dense(128, activation='sigmoid',name='encode11')(x)\n",
        "    return Model(inp, encoded)\n",
        "\n",
        "encoder = Encoder()\n",
        "encoder.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UeaQuS7l6odN",
        "outputId": "4ccc730f-291a-48d9-eeb9-281f6b296244"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"model_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " decoder (InputLayer)        [(None, 128)]             0         \n",
            "                                                                 \n",
            " decode1 (Dense)             (None, 256)               33024     \n",
            "                                                                 \n",
            " decode2 (Dense)             (None, 768)               197376    \n",
            "                                                                 \n",
            " reshape (Reshape)           (None, 4, 6, 32)          0         \n",
            "                                                                 \n",
            " decode3 (Conv2D)            (None, 4, 6, 32)          4128      \n",
            "                                                                 \n",
            " decode4 (Conv2D)            (None, 4, 6, 64)          18496     \n",
            "                                                                 \n",
            " up_sampling2d (UpSampling2D  (None, 8, 12, 64)        0         \n",
            " )                                                               \n",
            "                                                                 \n",
            " decode5 (Conv2D)            (None, 8, 12, 32)         8224      \n",
            "                                                                 \n",
            " decode6 (Conv2D)            (None, 8, 12, 64)         18496     \n",
            "                                                                 \n",
            " up_sampling2d_1 (UpSampling  (None, 16, 24, 64)       0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode7 (Conv2D)            (None, 16, 24, 64)        16448     \n",
            "                                                                 \n",
            " decode8 (Conv2D)            (None, 16, 24, 128)       73856     \n",
            "                                                                 \n",
            " up_sampling2d_2 (UpSampling  (None, 32, 48, 128)      0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode9 (Conv2D)            (None, 32, 48, 64)        32832     \n",
            "                                                                 \n",
            " decode10 (Conv2D)           (None, 32, 48, 64)        65600     \n",
            "                                                                 \n",
            " decode11 (Conv2D)           (None, 32, 48, 128)       73856     \n",
            "                                                                 \n",
            " up_sampling2d_3 (UpSampling  (None, 64, 96, 128)      0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode12 (Conv2D)           (None, 64, 96, 64)        131136    \n",
            "                                                                 \n",
            " decode13 (Conv2D)           (None, 64, 96, 32)        18464     \n",
            "                                                                 \n",
            " decode14 (Conv2D)           (None, 64, 96, 16)        2064      \n",
            "                                                                 \n",
            " decode15 (Conv2D)           (None, 64, 96, 1)         65        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 694,065\n",
            "Trainable params: 694,065\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "D_INPUT_SHAPE=[128]\n",
        "def Decoder():\n",
        "    inp = Input(shape=D_INPUT_SHAPE, name='decoder')\n",
        "    x = Dense(256, activation='elu', name='decode1')(inp)\n",
        "    x = Dense(768, activation='elu', name='decode2')(x)\n",
        "    x = Reshape((4, 6, 32))(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same', name='decode3')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same', name='decode4')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same', name='decode5')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same', name='decode6')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(64, (2, 2), activation='elu', padding='same', name='decode7')(x)\n",
        "    x = Conv2D(128, (3, 3), activation='elu', padding='same', name='decode8')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(64, (2, 2), activation='elu', padding='same', name='decode9')(x)\n",
        "    x = Conv2D(64, (4, 4), activation='elu', padding='same', name='decode10')(x)\n",
        "    x = Conv2D(128, (3, 3), activation='elu', padding='same', name='decode11')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(64, (4, 4), activation='elu', padding='same', name='decode12')(x)\n",
        "    x = Conv2D(32, (3, 3), activation='elu', padding='same', name='decode13')(x)\n",
        "    x = Conv2D(16, (2, 2), activation='elu', padding='same', name='decode14')(x)\n",
        "    decoded = Conv2D(1, (2, 2), activation='sigmoid', padding='same', name='decode15')(x)\n",
        "    return Model(inp, decoded)\n",
        "\n",
        "decoder = Decoder()\n",
        "decoder.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uUkeZIDN6odP",
        "outputId": "8c4bcc27-9f09-4d84-f1a4-9a635c2d783f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"model_2\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " input_2 (InputLayer)        [(None, 64, 96, 1)]       0         \n",
            "                                                                 \n",
            " encode1 (Conv2D)            (None, 64, 96, 128)       2176      \n",
            "                                                                 \n",
            " encode2 (Conv2D)            (None, 64, 96, 64)        73792     \n",
            "                                                                 \n",
            " max_pooling2d_4 (MaxPooling  (None, 32, 48, 64)       0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode3 (Conv2D)            (None, 32, 48, 64)        36928     \n",
            "                                                                 \n",
            " encode4 (Conv2D)            (None, 32, 48, 32)        8224      \n",
            "                                                                 \n",
            " max_pooling2d_5 (MaxPooling  (None, 16, 24, 32)       0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode5 (Conv2D)            (None, 16, 24, 64)        18496     \n",
            "                                                                 \n",
            " encode6 (Conv2D)            (None, 16, 24, 32)        8224      \n",
            "                                                                 \n",
            " max_pooling2d_6 (MaxPooling  (None, 8, 12, 32)        0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode7 (Conv2D)            (None, 8, 12, 64)         18496     \n",
            "                                                                 \n",
            " encode8 (Conv2D)            (None, 8, 12, 32)         8224      \n",
            "                                                                 \n",
            " max_pooling2d_7 (MaxPooling  (None, 4, 6, 32)         0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " encode9 (Conv2D)            (None, 4, 6, 32)          9248      \n",
            "                                                                 \n",
            " flatten_1 (Flatten)         (None, 768)               0         \n",
            "                                                                 \n",
            " encode10 (Dense)            (None, 256)               196864    \n",
            "                                                                 \n",
            " encode11 (Dense)            (None, 128)               32896     \n",
            "                                                                 \n",
            " decode1 (Dense)             (None, 256)               33024     \n",
            "                                                                 \n",
            " decode2 (Dense)             (None, 768)               197376    \n",
            "                                                                 \n",
            " reshape_1 (Reshape)         (None, 4, 6, 32)          0         \n",
            "                                                                 \n",
            " decode3 (Conv2D)            (None, 4, 6, 32)          4128      \n",
            "                                                                 \n",
            " decode4 (Conv2D)            (None, 4, 6, 64)          18496     \n",
            "                                                                 \n",
            " up_sampling2d_4 (UpSampling  (None, 8, 12, 64)        0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode5 (Conv2D)            (None, 8, 12, 32)         8224      \n",
            "                                                                 \n",
            " decode6 (Conv2D)            (None, 8, 12, 64)         18496     \n",
            "                                                                 \n",
            " up_sampling2d_5 (UpSampling  (None, 16, 24, 64)       0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode7 (Conv2D)            (None, 16, 24, 64)        16448     \n",
            "                                                                 \n",
            " decode8 (Conv2D)            (None, 16, 24, 128)       73856     \n",
            "                                                                 \n",
            " up_sampling2d_6 (UpSampling  (None, 32, 48, 128)      0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode9 (Conv2D)            (None, 32, 48, 64)        32832     \n",
            "                                                                 \n",
            " decode10 (Conv2D)           (None, 32, 48, 64)        65600     \n",
            "                                                                 \n",
            " decode11 (Conv2D)           (None, 32, 48, 128)       73856     \n",
            "                                                                 \n",
            " up_sampling2d_7 (UpSampling  (None, 64, 96, 128)      0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " decode12 (Conv2D)           (None, 64, 96, 64)        131136    \n",
            "                                                                 \n",
            " decode13 (Conv2D)           (None, 64, 96, 32)        18464     \n",
            "                                                                 \n",
            " decode14 (Conv2D)           (None, 64, 96, 16)        2064      \n",
            "                                                                 \n",
            " decode15 (Conv2D)           (None, 64, 96, 1)         65        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 1,107,633\n",
            "Trainable params: 1,107,633\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "from keras.layers import LeakyReLU\n",
        "def Autoencoder():\n",
        "    inp = Input(shape=INPUT_SHAPE)\n",
        "    x = Conv2D(128, (4, 4), activation='elu', padding='same',name='encode1')(inp)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode2')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode3')(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same',name='encode4')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode5')(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same',name='encode6')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same',name='encode7')(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same',name='encode8')(x)\n",
        "    x = MaxPooling2D((2, 2), padding='same')(x)\n",
        "    x = Conv2D(32, (3, 3), activation='elu', padding='same',name='encode9')(x)\n",
        "    x = Flatten()(x)\n",
        "    x = Dense(256, activation='elu',name='encode10')(x)\n",
        "    \n",
        "    encoded = Dense(128, activation='sigmoid',name='encode11')(x)\n",
        "    x = Dense(256, activation='elu', name='decode1')(encoded)\n",
        "    x = Dense(768, activation='elu', name='decode2')(x)\n",
        "    x = Reshape((4, 6, 32))(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same', name='decode3')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same', name='decode4')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(32, (2, 2), activation='elu', padding='same', name='decode5')(x)\n",
        "    x = Conv2D(64, (3, 3), activation='elu', padding='same', name='decode6')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "\n",
        "\n",
        "#     x = Conv2D(32, (2, 2), activation='elu', padding='same', name='decode3')(x)\n",
        "#     x = Conv2D(64, (3, 3), activation='elu', padding='same', name='decode4')(x)\n",
        "#     x = Conv2DTranspose(64, (3,3),padding='same')(x)\n",
        "#     x = LeakyReLU()(x)\n",
        "#     x = UpSampling2D((2, 2))(x)\n",
        "#     x = Conv2D(32, (2, 2), activation='elu', padding='same', name='decode5')(x)\n",
        "#     x = Conv2D(64, (3, 3), activation='elu', padding='same', name='decode6')(x)\n",
        "#     x = Conv2DTranspose(64, (3,3),padding='same')(x)\n",
        "#     x = LeakyReLU()(x)\n",
        "#     x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(64, (2, 2), activation='elu', padding='same', name='decode7')(x)\n",
        "    x = Conv2D(128, (3, 3), activation='elu', padding='same', name='decode8')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(64, (2, 2), activation='elu', padding='same', name='decode9')(x)\n",
        "    x = Conv2D(64, (4, 4), activation='elu', padding='same', name='decode10')(x)\n",
        "    x = Conv2D(128, (3, 3), activation='elu', padding='same', name='decode11')(x)\n",
        "    x = UpSampling2D((2, 2))(x)\n",
        "    x = Conv2D(64, (4, 4), activation='elu', padding='same', name='decode12')(x)\n",
        "    x = Conv2D(32, (3, 3), activation='elu', padding='same', name='decode13')(x)\n",
        "    x = Conv2D(16, (2, 2), activation='elu', padding='same', name='decode14')(x)\n",
        "    decoded = Conv2D(1, (2, 2), activation='sigmoid', padding='same', name='decode15')(x)\n",
        "    return Model(inp, decoded)\n",
        "\n",
        "model = Autoencoder()\n",
        "model.compile(optimizer='adam', loss='mean_squared_error')\n",
        "model.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "id": "tmrpIRGU6odQ"
      },
      "outputs": [],
      "source": [
        "learning_rate_reduction = ReduceLROnPlateau(monitor='val_loss', \n",
        "                                            patience=4, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5,\n",
        "                                            min_lr=0.00001)\n",
        "filepath = \"Dancer_Auto_Model.hdf5\"\n",
        "checkpoint = ModelCheckpoint(filepath,\n",
        "                             save_best_only=True,\n",
        "                             monitor='val_loss',\n",
        "                             mode='min')\n",
        "\n",
        "early_stopping = EarlyStopping(monitor='val_loss',\n",
        "                              patience=8,\n",
        "                              verbose=1,\n",
        "                              mode='min',\n",
        "                              restore_best_weights=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "Vh5xVxK26odR"
      },
      "outputs": [],
      "source": [
        "class ImgSample(Callback):\n",
        "\n",
        "    def __init__(self):\n",
        "       super(Callback, self).__init__() \n",
        "\n",
        "    def on_epoch_end(self, epoch, logs={}):\n",
        "        sample_img = X_train[50]\n",
        "        sample_img = sample_img.reshape(1, IMG_HEIGHT, IMG_WIDTH, 1)\n",
        "        sample_img = self.model.predict(sample_img)[0]\n",
        "        imshow(sample_img.reshape(64,96))\n",
        "        plt.show()\n",
        "\n",
        "imgsample = ImgSample()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 349
        },
        "id": "KLMiiZpG6odR",
        "outputId": "ca5247cb-1ff3-47a8-fbd7-e144d6b562cb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 381ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "145/145 - 1510s - loss: 0.0363 - val_loss: 1.4923e-05 - lr: 0.0010 - 1510s/epoch - 10s/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f19f2d1c650>"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ],
      "source": [
        "model.fit(X_train, X_train,\n",
        "          epochs=1, \n",
        "          batch_size=32,\n",
        "          verbose=2,\n",
        "          validation_split=0.05,\n",
        "        callbacks=[learning_rate_reduction, checkpoint, early_stopping, imgsample])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "id": "ABtfQEC56odS",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9a044e5c-4ee2-4632-aed4-8dc44cddf060"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "152/152 [==============================] - 365s 2s/step\n"
          ]
        }
      ],
      "source": [
        "decoded_imgs = model.predict(X_train)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "id": "1OLB5HP96odT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 240
        },
        "outputId": "ad5765d1-322d-4a0b-f017-c83e27596b1c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x288 with 20 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABZgAAADfCAYAAAB7yLa3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOy9yZMkSZbe91NV23yLLSNyrayspat7eh80emaa2CjgiPBAHijggUIeeAApFB4pAEnwSP4BIIgDhaTwOiIkDwTXAQkKARkMFmKmp6ent+nu6q4lq7IyK7eI8PDF3DbVx4OamZt7eERGZvdgejD+lUSlu7mZqpqamr73Pn3vqRIRtthiiy222GKLLbbYYosttthiiy222GKLLbbY4mWh/7gbsMUWW2yxxRZbbLHFFltsscUWW2yxxRZbbLHFn0xsCeYttthiiy222GKLLbbYYosttthiiy222GKLLV4JW4J5iy222GKLLbbYYosttthiiy222GKLLbbYYotXwpZg3mKLLbbYYosttthiiy222GKLLbbYYostttjilbAlmLfYYosttthiiy222GKLLbbYYosttthiiy22eCVsCeYttthiiy222GKLLbbYYosttthiiy222GKLLV4JwWU/fv2v/i1xEbgAxCh0KQCIBmXBxgolEMyFfF8B/rjJpS1D1R9FAaoupxBcoHAxmEVTpsKF4ELQJZhCQPz1Ul+HdBqnQJeCixRVD0wOqgI0VIm/Tln/p0tBtALty1Li7wkF1J+757uwKd/fKwLKsXJPqhJ//UtA1AsueMnyfKGdy0XO1dEcK/ag6gtiIEjrvqz7d6Vf19ojCsodwfYcEjs++g/+xpVaef+TWwKbVzAMYC+4zmw4dtG5l12zCU05pvP9ovquWuZ62V2UAplocjHY+uEahFhZEuVwgEURIhi17KuXrftnRdP2zhCnFJi6kGPX57uLe/zh7Db3Zwc8eL5H9bRHMNcEqUJV9TtSv98mB134d0eX/j0X49+pH/zNv3alsfO1//BvCZ1xqbrjs/m8XpLQvs8rUJ3f146L2lA+yznipdG04bLf17HhfNn00nTe1Vdq26a2bOovLjm+flrnnIv6cuV3BeVQUfWhHEC543CxA9OZS61CVQqz8OMrSCGcCN/5b/76lcbO04e3xbzSRHo1WIRM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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(20, 4))\n",
        "for i in range(10):\n",
        "    # original\n",
        "    plt.subplot(2, 10, i + 1)\n",
        "    plt.imshow(X_train[i].reshape(IMG_HEIGHT, IMG_WIDTH))\n",
        "    plt.axis('off')\n",
        " \n",
        "    # reconstruction\n",
        "    plt.subplot(2, 10, i + 1 + 10)\n",
        "    plt.imshow(decoded_imgs[i].reshape(IMG_HEIGHT, IMG_WIDTH))\n",
        "    plt.axis('off')\n",
        " \n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "7RtCEzbB6odT"
      },
      "outputs": [],
      "source": [
        "model.save_weights(\"compressor_Auto_Weights.hdf5\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "metadata": {
        "id": "HU0YSYIo6odT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fcc6b6e8-9bf0-4ec4-fb82-adcf3795eb4c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n",
            "WARNING:tensorflow:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"
          ]
        }
      ],
      "source": [
        "encoder = Encoder()\n",
        "decoder = Decoder()\n",
        "\n",
        "encoder.load_weights(\"compressor_Auto_Weights.hdf5\", by_name=True)\n",
        "decoder.load_weights(\"compressor_Auto_Weights.hdf5\", by_name=True)\n",
        "\n",
        "model.save('Compressor_Auto_Model.hdf5') \n",
        "decoder.save('Decoder_Model.hdf5') \n",
        "encoder.save('Encoder_Model.hdf5')\n",
        "model.save_weights(\"compressor_Auto_Weights.hdf5\")\n",
        "decoder.save_weights(\"Decoder_Weights.hdf5\")\n",
        "encoder.save_weights(\"Encoder_Weights.hdf5\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "metadata": {
        "id": "VtgJhfKu6odU"
      },
      "outputs": [],
      "source": [
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tDajp7Rg6odU"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.5.6"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}